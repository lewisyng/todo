[{"C:\\LYWS\\todo\\todo\\src\\index.tsx":"1","C:\\LYWS\\todo\\todo\\src\\components\\app\\App.tsx":"2","C:\\LYWS\\todo\\todo\\src\\components\\main\\Main.tsx":"3","C:\\LYWS\\todo\\todo\\src\\components\\Header\\Header.tsx":"4","C:\\LYWS\\todo\\todo\\src\\store\\actions\\index.ts":"5","C:\\LYWS\\todo\\todo\\src\\components\\NewList\\NewList.tsx":"6","C:\\LYWS\\todo\\todo\\src\\components\\ListMenu\\ListMenu.tsx":"7","C:\\LYWS\\todo\\todo\\src\\store\\reducers\\index.ts":"8","C:\\LYWS\\todo\\todo\\src\\localbaseFunctions.tsx":"9","C:\\LYWS\\todo\\todo\\src\\components\\ListMenuItem\\ListMenuItem.tsx":"10","C:\\LYWS\\todo\\todo\\src\\localbase.js":"11","C:\\LYWS\\todo\\todo\\src\\styles\\colors.ts":"12","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewTodoItem.tsx":"13","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewDetailedItem.tsx":"14","C:\\LYWS\\todo\\todo\\src\\components\\itemSettings\\ItemSettings.tsx":"15","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Content.tsx":"16","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewSubtaskItem.tsx":"17","C:\\LYWS\\todo\\todo\\src\\store\\store\\index.ts":"18","C:\\LYWS\\todo\\todo\\src\\components\\Sidebar\\Sidebar.tsx":"19","C:\\LYWS\\todo\\todo\\src\\components\\Actions\\NewCollectionAction.tsx":"20","C:\\LYWS\\todo\\todo\\src\\board\\Board.tsx":"21","C:\\LYWS\\todo\\todo\\src\\components\\ui\\button\\Button.tsx":"22","C:\\LYWS\\todo\\todo\\src\\components\\CreateColumn\\CreateColumn.tsx":"23","C:\\LYWS\\todo\\todo\\src\\database.ts":"24","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Heading\\Heading.tsx":"25","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Button\\Button.tsx":"26","C:\\LYWS\\todo\\todo\\src\\components\\CreateItem\\CreateItem.tsx":"27","C:\\LYWS\\todo\\todo\\src\\components\\Column\\Column.tsx":"28","C:\\LYWS\\todo\\todo\\src\\components\\ColumnItem\\ColumnItem.tsx":"29","C:\\LYWS\\todo\\todo\\src\\components\\Modals\\DeleteColumnModal.tsx":"30"},{"size":382,"mtime":1647207834917,"results":"31","hashOfConfig":"32"},{"size":569,"mtime":1647210198657,"results":"33","hashOfConfig":"32"},{"size":417,"mtime":1637180552811,"results":"34","hashOfConfig":"32"},{"size":502,"mtime":1647208368947,"results":"35","hashOfConfig":"32"},{"size":6522,"mtime":1637167939651,"results":"36","hashOfConfig":"32"},{"size":2807,"mtime":1637183312231,"results":"37","hashOfConfig":"32"},{"size":1275,"mtime":1647215943863,"results":"38","hashOfConfig":"32"},{"size":1296,"mtime":1637167883277,"results":"39","hashOfConfig":"32"},{"size":7827,"mtime":1637167883266,"results":"40","hashOfConfig":"32"},{"size":985,"mtime":1637183095601,"results":"41","hashOfConfig":"32"},{"size":93,"mtime":1631995187554,"results":"42","hashOfConfig":"32"},{"size":425,"mtime":1631995187566,"results":"43","hashOfConfig":"32"},{"size":1308,"mtime":1631995187545,"results":"44","hashOfConfig":"32"},{"size":3714,"mtime":1647213315938,"results":"45","hashOfConfig":"32"},{"size":3237,"mtime":1637183330064,"results":"46","hashOfConfig":"32"},{"size":369,"mtime":1631995187548,"results":"47","hashOfConfig":"32"},{"size":1342,"mtime":1631995187544,"results":"48","hashOfConfig":"32"},{"size":378,"mtime":1637167939653,"results":"49","hashOfConfig":"32"},{"size":1609,"mtime":1647203934691,"results":"50","hashOfConfig":"32"},{"size":2945,"mtime":1637430136910,"results":"51","hashOfConfig":"32"},{"size":630,"mtime":1647264443789,"results":"52","hashOfConfig":"32"},{"size":902,"mtime":1647215981959,"results":"53","hashOfConfig":"32"},{"size":1289,"mtime":1647260982347,"results":"54","hashOfConfig":"32"},{"size":317,"mtime":1647214290552,"results":"55","hashOfConfig":"32"},{"size":487,"mtime":1647217136422,"results":"56","hashOfConfig":"32"},{"size":902,"mtime":1647215981959,"results":"57","hashOfConfig":"32"},{"size":1258,"mtime":1647264576028,"results":"58","hashOfConfig":"32"},{"size":2872,"mtime":1647264277705,"results":"59","hashOfConfig":"32"},{"size":3476,"mtime":1647264408664,"results":"60","hashOfConfig":"32"},{"size":1159,"mtime":1647264499498,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1w33uji",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\LYWS\\todo\\todo\\src\\index.tsx",[],["132","133"],"C:\\LYWS\\todo\\todo\\src\\components\\app\\App.tsx",["134","135"],"import { FunctionComponent } from 'react';\r\nimport styles from './App.module.sass';\r\nimport Header from '../Header/Header';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { setUp } from '../../store/actions';\r\nimport Board from 'src/board/Board';\r\n// import Sidebar from '../Sidebar/Sidebar';\r\n\r\nconst App: FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setUp());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Board />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\main\\Main.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\Header\\Header.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\actions\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\components\\NewList\\NewList.tsx",["136"],"import { FunctionComponent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./NewList.sass\";\r\nimport { addNewCollection, getCollections } from \"../../localbaseFunctions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setCollections } from \"../../store/actions\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { Dialog, DialogContent, DialogContentText, TextField } from \"@mui/material\";\r\n\r\nconst NewList: FunctionComponent = () => {\r\n  const store = useSelector((state) => state);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const createNewCollection = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    let tableNameAlreadyExists = await checkIfTableNameAlreadyExists(userInput);\r\n\r\n    if (tableNameAlreadyExists) {\r\n      alert(\"Der Name existiert bereits\");\r\n    } else if (userInput === \"\") {\r\n      alert(\"Bitten geben Sie einen Namen für die Liste an!\");\r\n    } else {\r\n      let latestID = await getLatestID();\r\n      await addNewCollection(latestID, userInput);\r\n\r\n      await getCollections().then((data) => {\r\n        dispatch(setCollections(data));\r\n      });\r\n    }\r\n    setDialogIsOpen(false);\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  const checkIfTableNameAlreadyExists = async (name: string) => {\r\n    let collections = await getCollections();\r\n\r\n    if (collections.length === 0) return false;\r\n\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].name === name) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const getLatestID = async () => {\r\n    let latestID = 0;\r\n    await getCollections().then((collections) => {\r\n      if (!collections.length) return;\r\n      for (let collection of collections) {\r\n        if (collection.id > latestID) latestID = collection.id;\r\n      }\r\n    });\r\n    return latestID + 1;\r\n  };\r\n\r\n  return (\r\n    <div className=\"newList\">\r\n      <IconButton onClick={() => setDialogIsOpen((prev) => !prev)}>\r\n        <AddIcon />\r\n      </IconButton>\r\n\r\n      <Dialog open={dialogIsOpen} onClose={() => setDialogIsOpen(false)}>\r\n        <DialogContent>\r\n          <form\r\n            autoComplete=\"off\"\r\n            onSubmit={(event) => createNewCollection(event)}\r\n          >\r\n            <DialogContentText>\r\n              Geben Sie einen Namen für Ihre Liste ein\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              onChange={(event) => setUserInput(event.target.value)}\r\n              value={userInput}\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewList;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\ListMenu\\ListMenu.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\reducers\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\localbaseFunctions.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ListMenuItem\\ListMenuItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\localbase.js",[],["137","138"],"C:\\LYWS\\todo\\todo\\src\\styles\\colors.ts",[],["139","140"],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewTodoItem.tsx",[],["141","142"],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewDetailedItem.tsx",["143","144"],"import React, { BaseSyntheticEvent, FunctionComponent, useState } from \"react\";\r\nimport styles from \"./NewDetailedItem.module.sass\";\r\nimport { ListType } from \"lib/types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewDetailedTodo } from \"src/store/actions\";\r\nimport Heading from \"../ui/Heading\";\r\nimport Button from \"../ui/Button\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Modal,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@mui/material\";\r\n\r\ntype Props = {\r\n  open: boolean;\r\n  list: ListType;\r\n  handleClose: () => void;\r\n};\r\n\r\nexport const NewDetailedItem: FunctionComponent<Props> = ({\r\n  open,\r\n  list,\r\n  handleClose,\r\n}) => {\r\n  const store = useSelector((state: any) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const [newItemData, setNewItemData] = useState<{\r\n    name: string;\r\n    description: string;\r\n    priority: \"low\" | \"medium\" | \"high\";\r\n  }>({\r\n    name: \"\",\r\n    description: \"\",\r\n    priority: \"low\",\r\n  });\r\n\r\n  return (\r\n    <Modal open={open} onClose={handleClose}>\r\n      <div className={styles.newDetailedItem}>\r\n        <Heading>Neuer Eintrag</Heading>\r\n        <form\r\n          className={styles.newDetailedItem__form}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            dispatch(\r\n              createNewDetailedTodo(\r\n                store.currentCollectionName,\r\n                list,\r\n                newItemData\r\n              )\r\n            );\r\n            handleClose();\r\n          }}\r\n        >\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={newItemData.name}\r\n            onChange={(event) =>\r\n              setNewItemData({\r\n                ...newItemData,\r\n                name: event.target.value,\r\n              })\r\n            }\r\n          />\r\n          {/* todo create component for input fields */}\r\n\r\n          <label htmlFor=\"description\">Beschreibung</label>\r\n          <textarea\r\n            autoComplete=\"off\"\r\n            name=\"description\"\r\n            value={newItemData.description}\r\n            onChange={(event) =>\r\n              setNewItemData({\r\n                ...newItemData,\r\n                description: event.target.value,\r\n              })\r\n            }\r\n          />\r\n          <label htmlFor=\"Priority\">Priorität</label>\r\n          <RadioGroup\r\n            onChange={(event: BaseSyntheticEvent) =>\r\n              setNewItemData({\r\n                ...newItemData,\r\n                priority: event.target.value as \"low\" | \"medium\" | \"high\",\r\n              })\r\n            }\r\n            row\r\n            aria-label=\"priority\"\r\n            name=\"row-radio-buttons-group\"\r\n          >\r\n            <FormControlLabel\r\n              sx={{ pr: 3 }}\r\n              defaultChecked\r\n              value=\"low\"\r\n              control={<Radio size=\"small\" />}\r\n              label=\"Low\"\r\n            />\r\n            <FormControlLabel\r\n              sx={{ pr: 3 }}\r\n              value=\"medium\"\r\n              control={<Radio size=\"small\" />}\r\n              label=\"Medium\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"high\"\r\n              control={<Radio size=\"small\" />}\r\n              label=\"High\"\r\n            />\r\n          </RadioGroup>\r\n          <div className={styles.newDetailedItem__form__actions}>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Schließen\r\n            </Button>\r\n            <Button type=\"submit\">Sichern</Button>\r\n          </div>\r\n          {/* open modal with satisfying */}\r\n        </form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewDetailedItem;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\itemSettings\\ItemSettings.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Content.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewSubtaskItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\store\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\components\\Sidebar\\Sidebar.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\Actions\\NewCollectionAction.tsx",["145"],"import React, { useState } from \"react\";\r\nimport cs from \"classnames\";\r\nimport styles from \"./NewCollectionAction.module.sass\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  IconButton,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addNewCollection, getCollections } from \"src/localbaseFunctions\";\r\nimport { setCollections } from \"src/store/actions\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nexport const NewCollectionAction = () => {\r\n  const store = useSelector((state: any) => state);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const createNewCollection = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    let tableNameAlreadyExists = await checkIfTableNameAlreadyExists(userInput);\r\n\r\n    if (tableNameAlreadyExists) {\r\n      alert(\"Der Name existiert bereits\");\r\n    } else if (userInput === \"\") {\r\n      alert(\"Bitten geben Sie einen Namen für die Liste an!\");\r\n    } else {\r\n      let latestID = await getLatestID();\r\n      await addNewCollection(latestID, userInput);\r\n\r\n      await getCollections().then((data) => {\r\n        dispatch(setCollections(data));\r\n      });\r\n    }\r\n    setDialogIsOpen(false);\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  const checkIfTableNameAlreadyExists = async (name: string) => {\r\n    let collections = await getCollections();\r\n\r\n    if (collections.length === 0) return false;\r\n\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].name === name) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const getLatestID = async () => {\r\n    let latestID = 0;\r\n    await getCollections().then((collections) => {\r\n      if (!collections.length) return;\r\n      for (let collection of collections) {\r\n        if (collection.id > latestID) latestID = collection.id;\r\n      }\r\n    });\r\n    return latestID + 1;\r\n  };\r\n  return (\r\n    <div className={cs(styles.NewCollectionAction, styles.action)}>\r\n      <IconButton onClick={() => setDialogIsOpen((prev: any) => !prev)}>\r\n        <AddIcon />\r\n      </IconButton>\r\n\r\n      <Dialog open={dialogIsOpen} onClose={() => setDialogIsOpen(false)}>\r\n        <DialogContent>\r\n          <form\r\n            autoComplete=\"off\"\r\n            onSubmit={(event) => createNewCollection(event)}\r\n          >\r\n            <DialogContentText>\r\n              Geben Sie einen Namen für Ihre Liste ein\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              onChange={(event) => setUserInput(event.target.value)}\r\n              value={userInput}\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <Button onClick={() => setDialogIsOpen(false)}>Create</Button>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCollectionAction;\r\n",["146","147"],"C:\\LYWS\\todo\\todo\\src\\board\\Board.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\button\\Button.tsx",["148"],"import { FunctionComponent } from 'react';\r\nimport styles from './Button.module.sass';\r\nimport cn from 'classnames';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  color?: 'default' | 'warning' | 'info';\r\n  fullWidth?: boolean;\r\n  type?: 'submit' | undefined;\r\n  className?: string;\r\n  variant?: 'default' | 'secondary' | 'tertiary' | 'disabled';\r\n  onClick?: () => void;\r\n};\r\n\r\ntype ButtonType = {\r\n  color: Props['color'];\r\n  fullWidth: boolean;\r\n  type: 'submit' | undefined;\r\n  variant: Props['variant'];\r\n};\r\n\r\nconst Button: FunctionComponent<Props> = ({\r\n  children,\r\n  fullWidth,\r\n  variant = 'default',\r\n  type,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <button\r\n      className={cn(styles.button, fullWidth && styles.button__fullWidth)}\r\n      data-type={type}\r\n      data-variant={variant}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\CreateColumn\\CreateColumn.tsx",["149","150"],"C:\\LYWS\\todo\\todo\\src\\database.ts",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Heading\\Heading.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Button\\Button.tsx",["151"],"C:\\LYWS\\todo\\todo\\src\\components\\CreateItem\\CreateItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\Column\\Column.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ColumnItem\\ColumnItem.tsx",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"C:\\LYWS\\todo\\todo\\src\\components\\Modals\\DeleteColumnModal.tsx",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"183","severity":1,"message":"184","line":15,"column":6,"nodeType":"185","endLine":15,"endColumn":8,"suggestions":"186"},{"ruleId":"179","severity":1,"message":"187","line":12,"column":9,"nodeType":"181","messageId":"182","endLine":12,"endColumn":14},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"175","replacedBy":"188"},{"ruleId":"177","replacedBy":"189"},{"ruleId":"175","replacedBy":"190"},{"ruleId":"177","replacedBy":"191"},{"ruleId":"179","severity":1,"message":"192","line":9,"column":3,"nodeType":"181","messageId":"182","endLine":9,"endColumn":14},{"ruleId":"179","severity":1,"message":"193","line":11,"column":3,"nodeType":"181","messageId":"182","endLine":11,"endColumn":12},{"ruleId":"179","severity":1,"message":"187","line":18,"column":9,"nodeType":"181","messageId":"182","endLine":18,"endColumn":14},{"ruleId":"175","replacedBy":"194"},{"ruleId":"177","replacedBy":"195"},{"ruleId":"179","severity":1,"message":"196","line":15,"column":6,"nodeType":"181","messageId":"182","endLine":15,"endColumn":16},{"ruleId":"179","severity":1,"message":"197","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":21},{"ruleId":"179","severity":1,"message":"198","line":5,"column":23,"nodeType":"181","messageId":"182","endLine":5,"endColumn":34},{"ruleId":"179","severity":1,"message":"196","line":15,"column":6,"nodeType":"181","messageId":"182","endLine":15,"endColumn":16},{"ruleId":"179","severity":1,"message":"199","line":1,"column":29,"nodeType":"181","messageId":"182","endLine":1,"endColumn":35},{"ruleId":"179","severity":1,"message":"200","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":22},{"ruleId":"179","severity":1,"message":"201","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":24},{"ruleId":"179","severity":1,"message":"202","line":5,"column":26,"nodeType":"181","messageId":"182","endLine":5,"endColumn":40},{"ruleId":"179","severity":1,"message":"203","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":18},{"ruleId":"179","severity":1,"message":"204","line":6,"column":20,"nodeType":"181","messageId":"182","endLine":6,"endColumn":31},{"ruleId":"179","severity":1,"message":"205","line":6,"column":33,"nodeType":"181","messageId":"182","endLine":6,"endColumn":41},{"ruleId":"179","severity":1,"message":"206","line":8,"column":8,"nodeType":"181","messageId":"182","endLine":8,"endColumn":15},{"ruleId":"179","severity":1,"message":"207","line":9,"column":8,"nodeType":"181","messageId":"182","endLine":9,"endColumn":20},{"ruleId":"179","severity":1,"message":"208","line":10,"column":8,"nodeType":"181","messageId":"182","endLine":10,"endColumn":20},{"ruleId":"179","severity":1,"message":"209","line":11,"column":10,"nodeType":"181","messageId":"182","endLine":11,"endColumn":14},{"ruleId":"179","severity":1,"message":"210","line":11,"column":16,"nodeType":"181","messageId":"182","endLine":11,"endColumn":24},{"ruleId":"179","severity":1,"message":"211","line":12,"column":8,"nodeType":"181","messageId":"182","endLine":12,"endColumn":10},{"ruleId":"179","severity":1,"message":"212","line":20,"column":9,"nodeType":"181","messageId":"182","endLine":20,"endColumn":14},{"ruleId":"179","severity":1,"message":"213","line":21,"column":9,"nodeType":"181","messageId":"182","endLine":21,"endColumn":17},{"ruleId":"179","severity":1,"message":"214","line":23,"column":10,"nodeType":"181","messageId":"182","endLine":23,"endColumn":15},{"ruleId":"179","severity":1,"message":"215","line":24,"column":10,"nodeType":"181","messageId":"182","endLine":24,"endColumn":25},{"ruleId":"179","severity":1,"message":"216","line":24,"column":27,"nodeType":"181","messageId":"182","endLine":24,"endColumn":45},{"ruleId":"179","severity":1,"message":"217","line":25,"column":10,"nodeType":"181","messageId":"182","endLine":25,"endColumn":28},{"ruleId":"179","severity":1,"message":"218","line":25,"column":30,"nodeType":"181","messageId":"182","endLine":25,"endColumn":51},{"ruleId":"179","severity":1,"message":"219","line":30,"column":9,"nodeType":"181","messageId":"182","endLine":30,"endColumn":21},{"ruleId":"179","severity":1,"message":"220","line":32,"column":9,"nodeType":"181","messageId":"182","endLine":32,"endColumn":23},{"ruleId":"179","severity":1,"message":"221","line":36,"column":9,"nodeType":"181","messageId":"182","endLine":36,"endColumn":24},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"@typescript-eslint/no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["224"],"'store' is assigned a value but never used.",["222"],["223"],["222"],["223"],"'FormControl' is defined but never used.","'FormLabel' is defined but never used.",["222"],["223"],"'ButtonType' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'useRef' is defined but never used.","'NewSubtaskItem' is defined but never used.","'deleteListItem' is defined but never used.","'toggleTaskDone' is defined but never used.","'ListType' is defined but never used.","'SubtaskType' is defined but never used.","'TodoType' is defined but never used.","'Content' is defined but never used.","'ItemSettings' is defined but never used.","'MoreVertIcon' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'cs' is defined but never used.","'state' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'hover' is assigned a value but never used.","'newSubtaskField' is assigned a value but never used.","'setNewSubtaskField' is assigned a value but never used.","'itemSettingsOpened' is assigned a value but never used.","'setItemSettingsOpened' is assigned a value but never used.","'taskMenuOpen' is assigned a value but never used.","'handleMenuOpen' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},"Update the dependencies array to be: [dispatch]",{"range":"227","text":"228"},[464,466],"[dispatch]"]