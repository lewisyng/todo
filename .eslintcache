[{"C:\\LYWS\\todo\\todo\\src\\index.tsx":"1","C:\\LYWS\\todo\\todo\\src\\components\\app\\App.tsx":"2","C:\\LYWS\\todo\\todo\\src\\components\\main\\Main.tsx":"3","C:\\LYWS\\todo\\todo\\src\\components\\Header\\Header.tsx":"4","C:\\LYWS\\todo\\todo\\src\\store\\actions\\index.ts":"5","C:\\LYWS\\todo\\todo\\src\\currentCollection\\CurrentCollection.tsx":"6","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Heading.tsx":"7","C:\\LYWS\\todo\\todo\\src\\components\\NewList\\NewList.tsx":"8","C:\\LYWS\\todo\\todo\\src\\components\\ListMenu\\ListMenu.tsx":"9","C:\\LYWS\\todo\\todo\\src\\store\\reducers\\index.ts":"10","C:\\LYWS\\todo\\todo\\src\\localbaseFunctions.tsx":"11","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Button.tsx":"12","C:\\LYWS\\todo\\todo\\src\\components\\list\\List.tsx":"13","C:\\LYWS\\todo\\todo\\src\\components\\ListMenuItem\\ListMenuItem.tsx":"14","C:\\LYWS\\todo\\todo\\src\\localbase.js":"15","C:\\LYWS\\todo\\todo\\src\\styles\\colors.ts":"16","C:\\LYWS\\todo\\todo\\src\\components\\Listitem\\ListItem.tsx":"17","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewTodoItem.tsx":"18","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewDetailedItem.tsx":"19","C:\\LYWS\\todo\\todo\\src\\components\\itemSettings\\ItemSettings.tsx":"20","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Content.tsx":"21","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewSubtaskItem.tsx":"22","C:\\LYWS\\todo\\todo\\src\\store\\saga.js":"23","C:\\LYWS\\todo\\todo\\src\\store\\store\\index.ts":"24","C:\\LYWS\\todo\\todo\\src\\components\\Sidebar\\Sidebar.tsx":"25"},{"size":382,"mtime":1637168005382,"results":"26","hashOfConfig":"27"},{"size":777,"mtime":1637177993691,"results":"28","hashOfConfig":"27"},{"size":415,"mtime":1637176544501,"results":"29","hashOfConfig":"27"},{"size":388,"mtime":1631995187522,"results":"30","hashOfConfig":"27"},{"size":6522,"mtime":1637167939651,"results":"31","hashOfConfig":"27"},{"size":1789,"mtime":1637167939648,"results":"32","hashOfConfig":"27"},{"size":1003,"mtime":1637167939646,"results":"33","hashOfConfig":"27"},{"size":2787,"mtime":1631995187531,"results":"34","hashOfConfig":"27"},{"size":1272,"mtime":1637167883262,"results":"35","hashOfConfig":"27"},{"size":1296,"mtime":1637167883277,"results":"36","hashOfConfig":"27"},{"size":7827,"mtime":1637167883266,"results":"37","hashOfConfig":"27"},{"size":1600,"mtime":1637168861831,"results":"38","hashOfConfig":"27"},{"size":2721,"mtime":1637168932032,"results":"39","hashOfConfig":"27"},{"size":988,"mtime":1631995187526,"results":"40","hashOfConfig":"27"},{"size":93,"mtime":1631995187554,"results":"41","hashOfConfig":"27"},{"size":425,"mtime":1631995187566,"results":"42","hashOfConfig":"27"},{"size":2892,"mtime":1637167939641,"results":"43","hashOfConfig":"27"},{"size":1308,"mtime":1631995187545,"results":"44","hashOfConfig":"27"},{"size":3012,"mtime":1631995187542,"results":"45","hashOfConfig":"27"},{"size":3241,"mtime":1631995187536,"results":"46","hashOfConfig":"27"},{"size":369,"mtime":1631995187548,"results":"47","hashOfConfig":"27"},{"size":1342,"mtime":1631995187544,"results":"48","hashOfConfig":"27"},{"size":1332,"mtime":1632773357128,"results":"49","hashOfConfig":"27"},{"size":378,"mtime":1637167939653,"results":"50","hashOfConfig":"27"},{"size":376,"mtime":1637169459699,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1w33uji",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"C:\\LYWS\\todo\\todo\\src\\index.tsx",[],["109","110"],"C:\\LYWS\\todo\\todo\\src\\components\\app\\App.tsx",["111"],"C:\\LYWS\\todo\\todo\\src\\components\\main\\Main.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\Header\\Header.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\actions\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\currentCollection\\CurrentCollection.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Heading.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\NewList\\NewList.tsx",["112"],"import { FunctionComponent } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  IconButton,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport \"./NewList.sass\";\r\nimport { addNewCollection, getCollections } from \"../../localbaseFunctions\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setCollections } from \"../../store/actions\";\r\n\r\nconst NewList: FunctionComponent = () => {\r\n  const store = useSelector((state) => state);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const createNewCollection = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    let tableNameAlreadyExists = await checkIfTableNameAlreadyExists(userInput);\r\n\r\n    if (tableNameAlreadyExists) {\r\n      alert(\"Der Name existiert bereits\");\r\n    } else if (userInput === \"\") {\r\n      alert(\"Bitten geben Sie einen Namen für die Liste an!\");\r\n    } else {\r\n      let latestID = await getLatestID();\r\n      await addNewCollection(latestID, userInput);\r\n\r\n      await getCollections().then((data) => {\r\n        dispatch(setCollections(data));\r\n      });\r\n    }\r\n    setDialogIsOpen(false);\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  const checkIfTableNameAlreadyExists = async (name: string) => {\r\n    let collections = await getCollections();\r\n\r\n    if (collections.length === 0) return false;\r\n\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].name === name) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const getLatestID = async () => {\r\n    let latestID = 0;\r\n    await getCollections().then((collections) => {\r\n      if (!collections.length) return;\r\n      for (let collection of collections) {\r\n        if (collection.id > latestID) latestID = collection.id;\r\n      }\r\n    });\r\n    return latestID + 1;\r\n  };\r\n\r\n  return (\r\n    <div className=\"newList\">\r\n      <IconButton onClick={() => setDialogIsOpen((prev) => !prev)}>\r\n        <AddIcon />\r\n      </IconButton>\r\n\r\n      <Dialog open={dialogIsOpen} onClose={() => setDialogIsOpen(false)}>\r\n        <DialogContent>\r\n          <form\r\n            autoComplete=\"off\"\r\n            onSubmit={(event) => createNewCollection(event)}\r\n          >\r\n            <DialogContentText>\r\n              Geben Sie einen Namen für Ihre Liste ein\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              onChange={(event) => setUserInput(event.target.value)}\r\n              value={userInput}\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewList;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\ListMenu\\ListMenu.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\reducers\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\localbaseFunctions.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Button.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\list\\List.tsx",["113","114"],"import { FunctionComponent, useState } from \"react\";\r\nimport styles from \"./List.module.sass\";\r\nimport { deleteList, getCollection } from \"../../localbaseFunctions\";\r\nimport ListItem from \"../Listitem/ListItem\";\r\nimport NewTodoItem from \"../newItem/NewTodoItem\";\r\nimport NewDetailedItem from \"../newItem/NewDetailedItem\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteEntireList } from \"../../store/actions\";\r\nimport { ListType } from \"../../../lib/types\";\r\nimport Heading from \"../ui/Heading\";\r\nimport Button from \"../ui/Button\";\r\n\r\ntype Props = {\r\n  list: ListType;\r\n};\r\n\r\nconst List: FunctionComponent<Props> = ({ list }) => {\r\n  const { currentCollectionName } = useSelector((state: any) => state);\r\n  const dispatch = useDispatch();\r\n  const [showNewItemField, setShowNewItemField] = useState(false);\r\n  const [showNewDetailedItem, setShowNewDetailedItem] = useState(false);\r\n\r\n  return (\r\n    <div className={styles.list}>\r\n      <div className={styles.listHeader}>\r\n        <div className={styles.listHeader__details}>\r\n          <Heading>{list.name}</Heading>\r\n          <IconButton\r\n            onClick={() =>\r\n              dispatch(deleteEntireList(currentCollectionName, list))\r\n            }\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </div>\r\n        {!showNewItemField && (\r\n          <div className={styles.listHeader__actions}>\r\n            <Button onClick={() => setShowNewItemField(true)}>\r\n              Schnell-Eintrag\r\n            </Button>\r\n            <Button onClick={() => setShowNewDetailedItem(true)}>\r\n              Detail-Eintrag\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className={styles.list__listItems}>\r\n        {showNewItemField && (\r\n          <NewTodoItem\r\n            list={list}\r\n            handleClose={() => setShowNewItemField(false)}\r\n          />\r\n        )}\r\n\r\n        {list.todos.map((listItem) => (\r\n          <>\r\n            <ListItem\r\n              type=\"task\"\r\n              key={listItem.id.task}\r\n              list={list}\r\n              listItem={listItem}\r\n            />\r\n            {listItem.subtasks.map((subtask) => (\r\n              <ListItem\r\n                type=\"subtask\"\r\n                key={subtask.id[\"subtask\"]}\r\n                list={list}\r\n                listItem={subtask}\r\n              />\r\n            ))}\r\n          </>\r\n        ))}\r\n      </div>\r\n\r\n      <NewDetailedItem\r\n        open={showNewDetailedItem}\r\n        handleClose={() => setShowNewDetailedItem(false)}\r\n        list={list}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\ListMenuItem\\ListMenuItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\localbase.js",[],["115","116"],"C:\\LYWS\\todo\\todo\\src\\styles\\colors.ts",[],"C:\\LYWS\\todo\\todo\\src\\components\\Listitem\\ListItem.tsx",["117"],"import { FunctionComponent, useState } from \"react\";\r\nimport \"./ListItem.sass\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport NewSubtaskItem from \"../newItem/NewSubtaskItem\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteListItem, toggleTaskDone } from \"../../store/actions\";\r\nimport { ListType, SubtaskType, TodoType } from \"lib/types\";\r\nimport Heading from \"../ui/Heading\";\r\nimport Content from \"../ui/Content\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport ItemSettings from \"../itemSettings/ItemSettings\";\r\n\r\ntype ConnectedProps = {\r\n  connectedProps?: any;\r\n};\r\n\r\ntype Props = {\r\n  type: \"task\" | \"subtask\";\r\n  listItem: TodoType | SubtaskType;\r\n  list: ListType;\r\n};\r\n\r\ntype finalProps = ConnectedProps & Props;\r\n\r\nconst ListItemContent = ({\r\n  currentCollectionName,\r\n  list,\r\n  listItem,\r\n  title,\r\n  description,\r\n  dispatch,\r\n}: {\r\n  currentCollectionName: string;\r\n  list: ListType;\r\n  listItem: TodoType | SubtaskType;\r\n  title: string;\r\n  description: string;\r\n  dispatch: any;\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"listItem__content\"\r\n      onClick={() => {\r\n        dispatch(\r\n          toggleTaskDone(\r\n            currentCollectionName,\r\n            list,\r\n            listItem as TodoType\r\n          )\r\n        );\r\n      }}\r\n    >\r\n      <Heading>{title}</Heading>\r\n      <Content>{description}</Content>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ListItem: FunctionComponent<finalProps> = ({\r\n  connectedProps,\r\n  type,\r\n  listItem,\r\n  list,\r\n\r\n}) => {\r\n  const state = useSelector((state: any) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const [hover, setHover] = useState(false);\r\n  const [newSubtaskField, setNewSubtaskField] = useState(false);\r\n  const [itemSettingsOpened, setItemSettingsOpened] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`listItem ${listItem.done && \"done\"} ${\r\n          listItem.priority\r\n        } ${type}`}\r\n        onMouseEnter={() => setHover(true)}\r\n        onMouseLeave={() => setHover(false)}\r\n      >\r\n        <ListItemContent\r\n          currentCollectionName={state.currentCollectionName}\r\n          list={list}\r\n          listItem={listItem}\r\n          title={listItem.name}\r\n          description={listItem.description}\r\n          dispatch={dispatch}\r\n        />\r\n\r\n        <div className={`listItem__actions ${hover && \"hover\"}`}>\r\n          <IconButton>\r\n            <SettingsIcon onClick={() => setItemSettingsOpened(true)} />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <DeleteIcon\r\n              onClick={() => {\r\n                dispatch(\r\n                  deleteListItem(\r\n                    connectedProps.currentCollectionName,\r\n                    list,\r\n                    listItem as TodoType\r\n                  )\r\n                );\r\n              }}\r\n            />\r\n          </IconButton>\r\n\r\n          {type === \"task\" && (\r\n            <IconButton\r\n              onClick={() => {\r\n                setNewSubtaskField(true);\r\n              }}\r\n            >\r\n              <AddIcon />\r\n            </IconButton>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {newSubtaskField && (\r\n        <NewSubtaskItem\r\n          list={list}\r\n          item={listItem as SubtaskType}\r\n          handleClose={() => setNewSubtaskField(false)}\r\n        />\r\n      )}\r\n      <ItemSettings\r\n        handleClose={() => setItemSettingsOpened(false)}\r\n        open={itemSettingsOpened}\r\n        item={listItem}\r\n        list={list}\r\n        type={type}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListItem","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewTodoItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewDetailedItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\itemSettings\\ItemSettings.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Content.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewSubtaskItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\saga.js",["118","119","120","121"],"import { useDispatch } from \"react-redux\";\r\nimport {\r\n  all,\r\n  call,\r\n  fork,\r\n  put,\r\n  take,\r\n  takeEvery,\r\n  takeLatest,\r\n} from \"redux-saga/effects\";\r\nimport { getCollection, getCollections } from \"src/localbaseFunctions\";\r\nimport {\r\n  setCollections,\r\n  setCurrentCollection,\r\n  setCurrentCollectionName,\r\n} from \"./collection/collection.actions\";\r\n\r\nconst getCol = async () => {\r\n  const cols = await getCollections().then((data) => data);\r\n  return cols;\r\n};\r\n\r\nfunction* setUp(action) {\r\n  const collections = yield call(getCol);\r\n  console.log(\"collections\", collections);\r\n  yield put(setCollections(collections));\r\n  const currentCollectionName = yield call(getCollections);\r\n  console.log(\"currentCollectionName\", currentCollectionName);\r\n  yield put(setCurrentCollectionName(currentCollectionName[0].name));\r\n  const currentCollection = yield call(() =>\r\n    getCollection(currentCollectionName[0].name)\r\n  );\r\n  console.log(\"getCollection\", currentCollectionName[0].name);\r\n  yield put(setCurrentCollection(currentCollection));\r\n\r\n  //   yield put({\r\n  //     type: \"SET_COLLECTIONS\",\r\n  //     payload: {\r\n  //       collections: collections,\r\n  //     },\r\n  //   });\r\n}\r\n\r\nexport function* setUpAll() {\r\n  yield takeEvery(\"SETUP\", setUp);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([setUpAll()]);\r\n}\r\n",["122","123"],"C:\\LYWS\\todo\\todo\\src\\store\\store\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\components\\Sidebar\\Sidebar.tsx",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":15,"column":6,"nodeType":"130","endLine":15,"endColumn":8,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":17,"column":9,"nodeType":"134","messageId":"135","endLine":17,"endColumn":14},{"ruleId":"132","severity":1,"message":"136","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":20},{"ruleId":"132","severity":1,"message":"137","line":3,"column":22,"nodeType":"134","messageId":"135","endLine":3,"endColumn":35},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"132","severity":1,"message":"138","line":7,"column":10,"nodeType":"134","messageId":"135","endLine":7,"endColumn":17},{"ruleId":"139","severity":1,"message":"140","line":1,"column":10,"nodeType":"134","messageId":"135","endLine":1,"endColumn":21},{"ruleId":"139","severity":1,"message":"141","line":5,"column":3,"nodeType":"134","messageId":"135","endLine":5,"endColumn":7},{"ruleId":"139","severity":1,"message":"142","line":7,"column":3,"nodeType":"134","messageId":"135","endLine":7,"endColumn":7},{"ruleId":"139","severity":1,"message":"143","line":9,"column":3,"nodeType":"134","messageId":"135","endLine":9,"endColumn":13},{"ruleId":"124","replacedBy":"144"},{"ruleId":"126","replacedBy":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["148"],"@typescript-eslint/no-unused-vars","'store' is assigned a value but never used.","Identifier","unusedVar","'deleteList' is defined but never used.","'getCollection' is defined but never used.","'connect' is defined but never used.","no-unused-vars","'useDispatch' is defined but never used.","'fork' is defined but never used.","'take' is defined but never used.","'takeLatest' is defined but never used.",["146"],["147"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},"Update the dependencies array to be: [dispatch]",{"range":"151","text":"152"},[499,501],"[dispatch]"]