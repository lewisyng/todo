[{"D:\\LYWS\\todo2\\todo\\src\\index.js":"1","D:\\LYWS\\todo2\\todo\\src\\App.js":"2","D:\\LYWS\\todo2\\todo\\src\\Header.js":"3","D:\\LYWS\\todo2\\todo\\src\\components\\Main.js":"4","D:\\LYWS\\todo2\\todo\\src\\localbase.js":"5","D:\\LYWS\\todo2\\todo\\src\\localbaseFunctions.js":"6","D:\\LYWS\\todo2\\todo\\src\\Footer.js":"7","D:\\LYWS\\todo2\\todo\\src\\selectedTable\\SelectedTable.js":"8","D:\\LYWS\\todo2\\todo\\src\\sidebar\\Sidebar.js":"9","D:\\LYWS\\todo2\\todo\\src\\selectedTable\\NewItemField.js":"10","D:\\LYWS\\todo2\\todo\\src\\selectedTable\\DocumentItem.js":"11","D:\\LYWS\\todo2\\todo\\src\\sidebar\\Collections.js":"12","D:\\LYWS\\todo2\\todo\\src\\sidebar\\CollectionItem.js":"13","D:\\LYWS\\todo2\\todo\\src\\NewList.js":"14","D:\\LYWS\\todo2\\todo\\src\\ListMenu.js":"15","D:\\LYWS\\todo2\\todo\\src\\components\\assets\\AddButton.js":"16","D:\\LYWS\\todo2\\todo\\src\\components\\assets\\DeleteButton.js":"17"},{"size":229,"mtime":1610841408386,"results":"18","hashOfConfig":"19"},{"size":514,"mtime":1610841408352,"results":"20","hashOfConfig":"19"},{"size":1094,"mtime":1610841408355,"results":"21","hashOfConfig":"19"},{"size":582,"mtime":1610841408361,"results":"22","hashOfConfig":"19"},{"size":91,"mtime":1609103935651,"results":"23","hashOfConfig":"19"},{"size":1907,"mtime":1610841408387,"results":"24","hashOfConfig":"19"},{"size":212,"mtime":1610841408354,"results":"25","hashOfConfig":"19"},{"size":2656,"mtime":1610847459853,"results":"26","hashOfConfig":"19"},{"size":3784,"mtime":1610843876047,"results":"27","hashOfConfig":"19"},{"size":947,"mtime":1610841408390,"results":"28","hashOfConfig":"19"},{"size":1325,"mtime":1610918896075,"results":"29","hashOfConfig":"19"},{"size":1939,"mtime":1610841408394,"results":"30","hashOfConfig":"19"},{"size":1860,"mtime":1610841408393,"results":"31","hashOfConfig":"19"},{"size":2740,"mtime":1610844337838,"results":"32","hashOfConfig":"19"},{"size":1821,"mtime":1610844337838,"results":"33","hashOfConfig":"19"},{"size":210,"mtime":1610844328274,"results":"34","hashOfConfig":"19"},{"size":261,"mtime":1610844796212,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1anxjsj",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\LYWS\\todo2\\todo\\src\\index.js",[],["75","76"],"D:\\LYWS\\todo2\\todo\\src\\App.js",[],"D:\\LYWS\\todo2\\todo\\src\\Header.js",["77"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.sass\";\r\nimport { getCollections } from \"./localbaseFunctions\";\r\nimport NewList from \"./NewList\";\r\nimport ListMenu from \"./ListMenu\";\r\n\r\nfunction Header(props) {\r\n  const [collections, setCollections] = useState();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setCollections(await getCollections());\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (collections && collections.length) {\r\n      props.handleSelectedList(collections[0].name);\r\n    } else {\r\n      props.handleSelectedList(null)\r\n    }\r\n  }, [collections]);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__actions\">\r\n        <ListMenu\r\n          handleSelectedList={props.handleSelectedList}\r\n          collections={collections}\r\n          handleCollectionDelete={async () =>\r\n            setCollections(await getCollections())\r\n          }\r\n        />\r\n        <NewList setCollections={(data) => setCollections(data)} />\r\n      </div>\r\n      <div className=\"logo\">TODOS</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\LYWS\\todo2\\todo\\src\\components\\Main.js",["78","79"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Main.sass\";\r\nimport Sidebar from \"../sidebar/Sidebar\";\r\nimport SelectedTable from \"../selectedTable/SelectedTable\";\r\n\r\nfunction Main(props) {\r\n  const {selectedList} = props;\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setSelectedTable(selectedList)\r\n  })\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      {/* <Sidebar handleCollectionChange={handleCollectionChange} /> */}\r\n      <SelectedTable selectedTable={selectedTable} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","D:\\LYWS\\todo2\\todo\\src\\localbase.js",[],"D:\\LYWS\\todo2\\todo\\src\\localbaseFunctions.js",[],"D:\\LYWS\\todo2\\todo\\src\\Footer.js",[],"D:\\LYWS\\todo2\\todo\\src\\selectedTable\\SelectedTable.js",["80"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./SelectedTable.sass\";\r\nimport db from \"../localbase\";\r\nimport NewItemField from \"./NewItemField\";\r\nimport DocumentItem from \"./DocumentItem\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Button from \"../components/assets/AddButton\";\r\n\r\nfunction SelectedTable(props) {\r\n  const [showNewItemField, setShowNewItemField] = useState(false);\r\n  const { selectedTable } = props;\r\n  const [items, setItems] = useState();\r\n\r\n  useEffect(() => {\r\n    if (selectedTable) {\r\n      getItems();\r\n    }\r\n  }, [selectedTable]);\r\n\r\n  const getItems = async () => {\r\n    let items = await db.collection(selectedTable).get();\r\n    setItems(items);\r\n  };\r\n\r\n  const toggleNewItemField = (show) => {\r\n    setShowNewItemField(show);\r\n  };\r\n\r\n  const createNewField = async (e, value) => {\r\n    e.preventDefault();\r\n\r\n    let arr = [];\r\n\r\n    await db\r\n      .collection(selectedTable)\r\n      .get()\r\n      .then((data) => {\r\n        data.forEach((item) => {\r\n          arr.push(item.id);\r\n        });\r\n      });\r\n\r\n    await db.collection(selectedTable).add({\r\n      id: arr[arr.length - 1] + 1 || 0,\r\n      name: value,\r\n      done: false,\r\n    });\r\n\r\n    getItems();\r\n    toggleNewItemField(false);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await db.collection(selectedTable).doc({ id: id }).delete();\r\n\r\n    getItems();\r\n  };\r\n\r\n  const toggleCheckbox = async (id, done) => {\r\n    if (done) {\r\n      await db.collection(selectedTable).doc({ id: id }).update({\r\n        done: false,\r\n      });\r\n    } else {\r\n      await db.collection(selectedTable).doc({ id: id }).update({\r\n        done: true,\r\n      });\r\n    }\r\n\r\n    getItems();\r\n  };\r\n\r\n  return (\r\n    <div className=\"selectedTable\">\r\n      {selectedTable && (\r\n        <>\r\n          <div className=\"selectedTable__header\">{selectedTable}</div>\r\n          <div className=\"selectedTable__list\">\r\n            {items &&\r\n              items.map((item) => {\r\n                return (\r\n                  <DocumentItem\r\n                    toggleCheckbox={toggleCheckbox}\r\n                    handleDelete={handleDelete}\r\n                    item={item}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {showNewItemField && (\r\n        <NewItemField\r\n          handleClick={() => toggleNewItemField(false)}\r\n          createNewField={createNewField}\r\n        />\r\n      )}\r\n\r\n      {selectedTable && (\r\n        <span onClick={() => toggleNewItemField(true)}>\r\n          <Button value={<AddIcon />} />\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectedTable;\r\n","D:\\LYWS\\todo2\\todo\\src\\sidebar\\Sidebar.js",["81"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport db from \"../localbase\";\r\nimport NewItemField from \"../selectedTable/NewItemField\";\r\nimport {\r\n  getCollections,\r\n  overwriteCollections,\r\n} from \"../localbaseFunctions\";\r\nimport Collections from \"./Collections\";\r\n\r\nfunction Sidebar(props) {\r\n  const [showNewItemField, setShowNewItemField] = useState(false);\r\n  const [collections, setCollections] = useState();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setCollections(await getCollections());\r\n    })();\r\n  }, []);\r\n\r\n  const createNewCollection = async (e, value) => {\r\n    e.preventDefault();\r\n\r\n    let tableNameAlreadyExists = await checkIfTableNameAlreadyExists(value);\r\n\r\n    if (tableNameAlreadyExists) {\r\n      alert(\"Der Name existiert bereits\");\r\n    } else if (value === \"\") {\r\n      alert(\"Bitten geben Sie einen Namen für die Liste an!\");\r\n    } else {\r\n      let latestID = await getLatestID();\r\n      await addNewCollection(latestID, value);\r\n      iniateNewCollection(value);\r\n      changeTable();\r\n\r\n      setShowNewItemField(false);\r\n      setCollections(await getCollections());\r\n    }\r\n  };\r\n\r\n  const checkIfTableNameAlreadyExists = async (name) => {\r\n    let collections = await getCollections();\r\n\r\n    if (collections.length === 0) return false;\r\n\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].name === name) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const iniateNewCollection = async (collection) => {\r\n    await db.collection(collection).get();\r\n  };\r\n\r\n  const getLatestID = async () => {\r\n    let latestID = 0;\r\n    let collections = await getCollections();\r\n    if (collections.length === 0) return latestID;\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].id > latestID) latestID = collections[i].id;\r\n    }\r\n    return latestID;\r\n  };\r\n\r\n  const addNewCollection = async (latestID, value) => {\r\n    let collections = await getCollections();\r\n\r\n    collections.unshift({\r\n      id: latestID + 1,\r\n      name: value,\r\n    });\r\n\r\n    overwriteCollections(collections);\r\n  };\r\n\r\n  const changeTable = async () => {\r\n    const collectionList = await db.collection(\"collections\").get();\r\n    props.handleCollectionChange(collectionList.data[0].name);\r\n  };\r\n\r\n  const reverseOrderOfCollections = async () => {\r\n    let collections = await getCollections();\r\n    let reverseCollections = collections.reverse();\r\n\r\n    setCollections(reverseCollections);\r\n    overwriteCollections(reverseCollections);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     setCollections(await getCollections())\r\n  //   })();\r\n  // }, [orderOfCollections])\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebarActions\">\r\n        <div className=\"sidebar__newListBtn\">\r\n          {/* <NewItemButton\r\n            color=\"default\"\r\n            toggleNewItemField={() => setShowNewItemField(true)}\r\n          >\r\n            <AddIcon />\r\n          </NewItemButton> */}\r\n        </div>\r\n\r\n        <div className=\"sidebar__reverseOrder\">\r\n          {/* <ReverseOrderButton reverseOrder={reverseOrderOfCollections}>\r\n            <ImportExportIcon />\r\n          </ReverseOrderButton> */}\r\n        </div>\r\n      </div>\r\n\r\n      {showNewItemField && (\r\n        <NewItemField\r\n          handleClick={() => setShowNewItemField(false)}\r\n          createNewField={createNewCollection}\r\n        />\r\n      )}\r\n      <Collections\r\n        handleDelete={async () => {\r\n          setCollections(await getCollections());\r\n          props.handleCollectionChange(null);\r\n        }}\r\n        handleCollectionChange={props.handleCollectionChange}\r\n        colls={collections}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\LYWS\\todo2\\todo\\src\\selectedTable\\NewItemField.js",[],"D:\\LYWS\\todo2\\todo\\src\\selectedTable\\DocumentItem.js",[],"D:\\LYWS\\todo2\\todo\\src\\sidebar\\Collections.js",[],"D:\\LYWS\\todo2\\todo\\src\\sidebar\\CollectionItem.js",[],"D:\\LYWS\\todo2\\todo\\src\\NewList.js",[],"D:\\LYWS\\todo2\\todo\\src\\ListMenu.js",[],"D:\\LYWS\\todo2\\todo\\src\\components\\assets\\AddButton.js",[],"D:\\LYWS\\todo2\\todo\\src\\components\\assets\\DeleteButton.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":22,"column":6,"nodeType":"88","endLine":22,"endColumn":19,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":15},{"ruleId":"86","severity":1,"message":"94","line":10,"column":3,"nodeType":"92","endLine":10,"endColumn":12,"suggestions":"95"},{"ruleId":"86","severity":1,"message":"96","line":18,"column":6,"nodeType":"88","endLine":18,"endColumn":21,"suggestions":"97"},{"ruleId":"90","severity":1,"message":"98","line":85,"column":9,"nodeType":"92","messageId":"93","endLine":85,"endColumn":34},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["101"],"no-unused-vars","'Sidebar' is defined but never used.","Identifier","unusedVar","React Hook useEffect contains a call to 'setSelectedTable'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selectedList] as a second argument to the useEffect Hook.",["102"],"React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.",["103"],"'reverseOrderOfCollections' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [collections, props]",{"range":"110","text":"111"},"Add dependencies array: [selectedList]",{"range":"112","text":"113"},"Update the dependencies array to be: [getItems, selectedTable]",{"range":"114","text":"115"},[584,597],"[collections, props]",[362,362],", [selectedList]",[566,581],"[getItems, selectedTable]"]