[{"D:\\LYWS\\todo2\\todo\\src\\index.js":"1","D:\\LYWS\\todo2\\todo\\src\\App.js":"2","D:\\LYWS\\todo2\\todo\\src\\Header.js":"3","D:\\LYWS\\todo2\\todo\\src\\components\\Main.js":"4","D:\\LYWS\\todo2\\todo\\src\\localbase.js":"5","D:\\LYWS\\todo2\\todo\\src\\localbaseFunctions.js":"6","D:\\LYWS\\todo2\\todo\\src\\components\\assets\\NewItemButton.js":"7","D:\\LYWS\\todo2\\todo\\src\\Footer.js":"8","D:\\LYWS\\todo2\\todo\\src\\selectedTable\\SelectedTable.js":"9","D:\\LYWS\\todo2\\todo\\src\\sidebar\\Sidebar.js":"10","D:\\LYWS\\todo2\\todo\\src\\selectedTable\\NewItemField.js":"11","D:\\LYWS\\todo2\\todo\\src\\selectedTable\\DocumentItem.js":"12","D:\\LYWS\\todo2\\todo\\src\\sidebar\\Collections.js":"13","D:\\LYWS\\todo2\\todo\\src\\sidebar\\CollectionItem.js":"14","D:\\LYWS\\todo2\\todo\\src\\components\\assets\\ReverseOrderButton.js":"15"},{"size":228,"mtime":1610841215936,"results":"16","hashOfConfig":"17"},{"size":281,"mtime":1610841215922,"results":"18","hashOfConfig":"17"},{"size":240,"mtime":1610841215926,"results":"19","hashOfConfig":"17"},{"size":538,"mtime":1610841215932,"results":"20","hashOfConfig":"17"},{"size":91,"mtime":1609103935651,"results":"21","hashOfConfig":"17"},{"size":587,"mtime":1610841215937,"results":"22","hashOfConfig":"17"},{"size":374,"mtime":1610841215934,"results":"23","hashOfConfig":"17"},{"size":211,"mtime":1610841215924,"results":"24","hashOfConfig":"17"},{"size":2971,"mtime":1610841215956,"results":"25","hashOfConfig":"17"},{"size":3993,"mtime":1610841215960,"results":"26","hashOfConfig":"17"},{"size":893,"mtime":1610841215941,"results":"27","hashOfConfig":"17"},{"size":1657,"mtime":1610841215939,"results":"28","hashOfConfig":"17"},{"size":1904,"mtime":1610841215959,"results":"29","hashOfConfig":"17"},{"size":2081,"mtime":1610841215957,"results":"30","hashOfConfig":"17"},{"size":344,"mtime":1610841215934,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1anxjsj",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\LYWS\\todo2\\todo\\src\\index.js",[],"D:\\LYWS\\todo2\\todo\\src\\App.js",[],["67","68"],"D:\\LYWS\\todo2\\todo\\src\\Header.js",["69"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.sass\";\r\nimport { getCollections } from \"./localbaseFunctions\";\r\nimport NewList from \"./NewList\";\r\nimport ListMenu from \"./ListMenu\";\r\n\r\nfunction Header(props) {\r\n  const [collections, setCollections] = useState();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setCollections(await getCollections());\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (collections && collections.length) {\r\n      props.handleSelectedList(collections[0].name);\r\n    } else {\r\n      props.handleSelectedList(null)\r\n    }\r\n  }, [collections]);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__actions\">\r\n        <ListMenu\r\n          handleSelectedList={props.handleSelectedList}\r\n          collections={collections}\r\n          handleCollectionDelete={async () =>\r\n            setCollections(await getCollections())\r\n          }\r\n        />\r\n        <NewList setCollections={(data) => setCollections(data)} />\r\n      </div>\r\n      <div className=\"logo\">TODOS</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\LYWS\\todo2\\todo\\src\\components\\Main.js",["70","71"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Main.sass\";\r\nimport Sidebar from \"../sidebar/Sidebar\";\r\nimport SelectedTable from \"../selectedTable/SelectedTable\";\r\n\r\nfunction Main(props) {\r\n  const {selectedList} = props;\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setSelectedTable(selectedList)\r\n  })\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      {/* <Sidebar handleCollectionChange={handleCollectionChange} /> */}\r\n      <SelectedTable selectedTable={selectedTable} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","D:\\LYWS\\todo2\\todo\\src\\localbase.js",[],"D:\\LYWS\\todo2\\todo\\src\\localbaseFunctions.js",[],"D:\\LYWS\\todo2\\todo\\src\\components\\assets\\NewItemButton.js",[],"D:\\LYWS\\todo2\\todo\\src\\Footer.js",[],"D:\\LYWS\\todo2\\todo\\src\\selectedTable\\SelectedTable.js",["72"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./SelectedTable.sass\";\r\nimport db from \"../localbase\";\r\nimport NewItemButton from \"../components/assets/NewItemButton\";\r\nimport NewItemField from \"./NewItemField\";\r\nimport DocumentItem from \"./DocumentItem\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nfunction SelectedTable(props) {\r\n  const [showNewItemField, setShowNewItemField] = useState(false);\r\n  const { selectedTable } = props;\r\n  const [items, setItems] = useState();\r\n\r\n  useEffect(() => {\r\n    if (selectedTable) {\r\n      getItems();\r\n    }\r\n  }, [selectedTable]);\r\n\r\n  const getItems = async () => {\r\n    let items = await db.collection(selectedTable).get();\r\n    setItems(items);\r\n  };\r\n\r\n  const toggleNewItemField = (show) => {\r\n    setShowNewItemField(show);\r\n  };\r\n\r\n  const createNewField = async (e, value) => {\r\n    e.preventDefault();\r\n\r\n    let arr = [];\r\n\r\n    await db\r\n      .collection(selectedTable)\r\n      .get()\r\n      .then((data) => {\r\n        data.forEach((item) => {\r\n          arr.push(item.id);\r\n        });\r\n      });\r\n\r\n    await db.collection(selectedTable).add({\r\n      id: arr[arr.length - 1] + 1 || 0,\r\n      name: value,\r\n      done: false,\r\n    });\r\n\r\n    getItems();\r\n    toggleNewItemField(false);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await db.collection(selectedTable).doc({ id: id }).delete();\r\n\r\n    getItems();\r\n  };\r\n\r\n  const toggleCheckbox = async (id, done) => {\r\n    if (done) {\r\n      await db.collection(selectedTable).doc({ id: id }).update({\r\n        done: false,\r\n      });\r\n    } else {\r\n      await db.collection(selectedTable).doc({ id: id }).update({\r\n        done: true,\r\n      });\r\n    }\r\n\r\n    getItems();\r\n  };\r\n\r\n  return (\r\n    <div className=\"selectedTable\">\r\n      {selectedTable && (\r\n        <>\r\n          <div className=\"selectedTable__header\">{selectedTable}</div>\r\n          <div className=\"selectedTableList\">\r\n            {items && (\r\n              <ul>\r\n                {items.map((item) => {\r\n                  return (\r\n                    <DocumentItem\r\n                      toggleCheckbox={toggleCheckbox}\r\n                      handleDelete={handleDelete}\r\n                      item={item}\r\n                    />\r\n                  );\r\n                })}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {showNewItemField && (\r\n        <NewItemField\r\n          handleClick={() => toggleNewItemField(false)}\r\n          createNewField={createNewField}\r\n        />\r\n      )}\r\n\r\n      <NewItemButton\r\n        toggleNewItemField={() => toggleNewItemField(true)}\r\n        color=\"primary\"\r\n      >\r\n        <AddIcon style={{ color: \"white\" }} />\r\n      </NewItemButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectedTable;\r\n","D:\\LYWS\\todo2\\todo\\src\\sidebar\\Sidebar.js",["73","74"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport db from \"../localbase\";\r\nimport NewItemField from \"../selectedTable/NewItemField\";\r\n// import ReverseOrderButton from \"../components/assets/ReverseOrderButton\";\r\nimport {\r\n  getCollections,\r\n  overwriteCollections,\r\n} from \"../localbaseFunctions\";\r\nimport NewItemButton from \"../components/assets/NewItemButton\";\r\nimport Collections from \"./Collections\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\n\r\nfunction Sidebar(props) {\r\n  const [showNewItemField, setShowNewItemField] = useState(false);\r\n  const [collections, setCollections] = useState();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setCollections(await getCollections());\r\n    })();\r\n  }, []);\r\n\r\n  const createNewCollection = async (e, value) => {\r\n    e.preventDefault();\r\n\r\n    let tableNameAlreadyExists = await checkIfTableNameAlreadyExists(value);\r\n\r\n    if (tableNameAlreadyExists) {\r\n      alert(\"Der Name existiert bereits\");\r\n    } else if (value === \"\") {\r\n      alert(\"Bitten geben Sie einen Namen für die Liste an!\");\r\n    } else {\r\n      let latestID = await getLatestID();\r\n      await addNewCollection(latestID, value);\r\n      iniateNewCollection(value);\r\n      changeTable();\r\n\r\n      setShowNewItemField(false);\r\n      setCollections(await getCollections());\r\n    }\r\n  };\r\n\r\n  const checkIfTableNameAlreadyExists = async (name) => {\r\n    let collections = await getCollections();\r\n\r\n    if (collections.length === 0) return false;\r\n\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].name === name) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const iniateNewCollection = async (collection) => {\r\n    await db.collection(collection).get();\r\n  };\r\n\r\n  const getLatestID = async () => {\r\n    let latestID = 0;\r\n    let collections = await getCollections();\r\n    if (collections.length === 0) return latestID;\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].id > latestID) latestID = collections[i].id;\r\n    }\r\n    return latestID;\r\n  };\r\n\r\n  const addNewCollection = async (latestID, value) => {\r\n    let collections = await getCollections();\r\n\r\n    collections.unshift({\r\n      id: latestID + 1,\r\n      name: value,\r\n    });\r\n\r\n    overwriteCollections(collections);\r\n  };\r\n\r\n  const changeTable = async () => {\r\n    const collectionList = await db.collection(\"collections\").get();\r\n    props.handleCollectionChange(collectionList.data[0].name);\r\n  };\r\n\r\n  const reverseOrderOfCollections = async () => {\r\n    let collections = await getCollections();\r\n    let reverseCollections = collections.reverse();\r\n\r\n    setCollections(reverseCollections);\r\n    overwriteCollections(reverseCollections);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     setCollections(await getCollections())\r\n  //   })();\r\n  // }, [orderOfCollections])\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebarActions\">\r\n        <div className=\"sidebar__newListBtn\">\r\n          <NewItemButton\r\n            color=\"default\"\r\n            toggleNewItemField={() => setShowNewItemField(true)}\r\n          >\r\n            <AddIcon />\r\n          </NewItemButton>\r\n        </div>\r\n\r\n        <div className=\"sidebar__reverseOrder\">\r\n          {/* <ReverseOrderButton reverseOrder={reverseOrderOfCollections}>\r\n            <ImportExportIcon />\r\n          </ReverseOrderButton> */}\r\n        </div>\r\n      </div>\r\n\r\n      {showNewItemField && (\r\n        <NewItemField\r\n          handleClick={() => setShowNewItemField(false)}\r\n          createNewField={createNewCollection}\r\n        />\r\n      )}\r\n      <Collections\r\n        handleDelete={async () => {\r\n          setCollections(await getCollections());\r\n          props.handleCollectionChange(null);\r\n        }}\r\n        handleCollectionChange={props.handleCollectionChange}\r\n        colls={collections}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\LYWS\\todo2\\todo\\src\\selectedTable\\NewItemField.js",[],"D:\\LYWS\\todo2\\todo\\src\\selectedTable\\DocumentItem.js",[],"D:\\LYWS\\todo2\\todo\\src\\sidebar\\Collections.js",[],"D:\\LYWS\\todo2\\todo\\src\\sidebar\\CollectionItem.js",[],"D:\\LYWS\\todo2\\todo\\src\\components\\assets\\ReverseOrderButton.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":22,"column":6,"nodeType":"81","endLine":22,"endColumn":19,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":15},{"ruleId":"79","severity":1,"message":"87","line":10,"column":3,"nodeType":"85","endLine":10,"endColumn":12,"suggestions":"88"},{"ruleId":"79","severity":1,"message":"89","line":18,"column":6,"nodeType":"81","endLine":18,"endColumn":21,"suggestions":"90"},{"ruleId":"83","severity":1,"message":"91","line":13,"column":8,"nodeType":"85","messageId":"86","endLine":13,"endColumn":24},{"ruleId":"83","severity":1,"message":"92","line":89,"column":9,"nodeType":"85","messageId":"86","endLine":89,"endColumn":34},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["95"],"no-unused-vars","'Sidebar' is defined but never used.","Identifier","unusedVar","React Hook useEffect contains a call to 'setSelectedTable'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selectedList] as a second argument to the useEffect Hook.",["96"],"React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.",["97"],"'ImportExportIcon' is defined but never used.","'reverseOrderOfCollections' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [collections, props]",{"range":"104","text":"105"},"Add dependencies array: [selectedList]",{"range":"106","text":"107"},"Update the dependencies array to be: [getItems, selectedTable]",{"range":"108","text":"109"},[584,597],"[collections, props]",[362,362],", [selectedList]",[577,592],"[getItems, selectedTable]"]