[{"D:\\LYWS\\todo2\\todo\\src\\index.js":"1","D:\\LYWS\\todo2\\todo\\src\\App.js":"2","D:\\LYWS\\todo2\\todo\\src\\Header.js":"3","D:\\LYWS\\todo2\\todo\\src\\components\\Main.js":"4","D:\\LYWS\\todo2\\todo\\src\\localbase.js":"5","D:\\LYWS\\todo2\\todo\\src\\localbaseFunctions.js":"6","D:\\LYWS\\todo2\\todo\\src\\components\\assets\\NewItemButton.js":"7","D:\\LYWS\\todo2\\todo\\src\\Footer.js":"8","D:\\LYWS\\todo2\\todo\\src\\NewList.js":"9","D:\\LYWS\\todo2\\todo\\src\\ListMenu.js":"10","D:\\LYWS\\todo2\\todo\\src\\selectedTable\\SelectedTable.js":"11","D:\\LYWS\\todo2\\todo\\src\\sidebar\\Sidebar.js":"12","D:\\LYWS\\todo2\\todo\\src\\components\\Button.js":"13","D:\\LYWS\\todo2\\todo\\src\\selectedTable\\NewItemField.js":"14","D:\\LYWS\\todo2\\todo\\src\\selectedTable\\DocumentItem.js":"15","D:\\LYWS\\todo2\\todo\\src\\sidebar\\Collections.js":"16","D:\\LYWS\\todo2\\todo\\src\\sidebar\\CollectionItem.js":"17"},{"size":229,"mtime":1610840933212,"results":"18","hashOfConfig":"19"},{"size":514,"mtime":1610840933199,"results":"20","hashOfConfig":"19"},{"size":1094,"mtime":1610840933202,"results":"21","hashOfConfig":"19"},{"size":582,"mtime":1610840933208,"results":"22","hashOfConfig":"19"},{"size":91,"mtime":1609103935651,"results":"23","hashOfConfig":"19"},{"size":1907,"mtime":1610840933214,"results":"24","hashOfConfig":"19"},{"size":308,"mtime":1610840933209,"results":"25","hashOfConfig":"19"},{"size":212,"mtime":1610840933200,"results":"26","hashOfConfig":"19"},{"size":2673,"mtime":1610840933205,"results":"27","hashOfConfig":"19"},{"size":1811,"mtime":1610840933204,"results":"28","hashOfConfig":"19"},{"size":2779,"mtime":1610840933284,"results":"29","hashOfConfig":"19"},{"size":4031,"mtime":1610840933256,"results":"30","hashOfConfig":"19"},{"size":253,"mtime":1610840933206,"results":"31","hashOfConfig":"19"},{"size":947,"mtime":1610840933286,"results":"32","hashOfConfig":"19"},{"size":1624,"mtime":1610840933215,"results":"33","hashOfConfig":"19"},{"size":1939,"mtime":1610840933254,"results":"34","hashOfConfig":"19"},{"size":1860,"mtime":1610840933220,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1anxjsj",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\LYWS\\todo2\\todo\\src\\index.js",[],"D:\\LYWS\\todo2\\todo\\src\\App.js",[],["76","77"],"D:\\LYWS\\todo2\\todo\\src\\Header.js",["78"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.sass\";\r\nimport { getCollections } from \"./localbaseFunctions\";\r\nimport NewList from \"./NewList\";\r\nimport ListMenu from \"./ListMenu\";\r\n\r\nfunction Header(props) {\r\n  const [collections, setCollections] = useState();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setCollections(await getCollections());\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (collections && collections.length) {\r\n      props.handleSelectedList(collections[0].name);\r\n    } else {\r\n      props.handleSelectedList(null)\r\n    }\r\n  }, [collections]);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__actions\">\r\n        <ListMenu\r\n          handleSelectedList={props.handleSelectedList}\r\n          collections={collections}\r\n          handleCollectionDelete={async () =>\r\n            setCollections(await getCollections())\r\n          }\r\n        />\r\n        <NewList setCollections={(data) => setCollections(data)} />\r\n      </div>\r\n      <div className=\"logo\">TODOS</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\LYWS\\todo2\\todo\\src\\components\\Main.js",["79","80"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Main.sass\";\r\nimport Sidebar from \"../sidebar/Sidebar\";\r\nimport SelectedTable from \"../selectedTable/SelectedTable\";\r\n\r\nfunction Main(props) {\r\n  const {selectedList} = props;\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setSelectedTable(selectedList)\r\n  })\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      {/* <Sidebar handleCollectionChange={handleCollectionChange} /> */}\r\n      <SelectedTable selectedTable={selectedTable} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","D:\\LYWS\\todo2\\todo\\src\\localbase.js",[],"D:\\LYWS\\todo2\\todo\\src\\localbaseFunctions.js",[],"D:\\LYWS\\todo2\\todo\\src\\components\\assets\\NewItemButton.js",[],"D:\\LYWS\\todo2\\todo\\src\\Footer.js",[],"D:\\LYWS\\todo2\\todo\\src\\NewList.js",[],"D:\\LYWS\\todo2\\todo\\src\\ListMenu.js",[],"D:\\LYWS\\todo2\\todo\\src\\selectedTable\\SelectedTable.js",["81"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./SelectedTable.sass\";\r\nimport db from \"../localbase\";\r\nimport NewItemButton from \"../components/assets/NewItemButton\";\r\nimport NewItemField from \"./NewItemField\";\r\nimport DocumentItem from \"./DocumentItem\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nfunction SelectedTable(props) {\r\n  const [showNewItemField, setShowNewItemField] = useState(false);\r\n  const { selectedTable } = props;\r\n  const [items, setItems] = useState();\r\n\r\n  useEffect(() => {\r\n    if (selectedTable) {\r\n      getItems();\r\n    }\r\n  }, [selectedTable]);\r\n\r\n  const getItems = async () => {\r\n    let items = await db.collection(selectedTable).get();\r\n    setItems(items);\r\n  };\r\n\r\n  const toggleNewItemField = (show) => {\r\n    setShowNewItemField(show);\r\n  };\r\n\r\n  const createNewField = async (e, value) => {\r\n    e.preventDefault();\r\n\r\n    let arr = [];\r\n\r\n    await db\r\n      .collection(selectedTable)\r\n      .get()\r\n      .then((data) => {\r\n        data.forEach((item) => {\r\n          arr.push(item.id);\r\n        });\r\n      });\r\n\r\n    await db.collection(selectedTable).add({\r\n      id: arr[arr.length - 1] + 1 || 0,\r\n      name: value,\r\n      done: false,\r\n    });\r\n\r\n    getItems();\r\n    toggleNewItemField(false);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await db.collection(selectedTable).doc({ id: id }).delete();\r\n\r\n    getItems();\r\n  };\r\n\r\n  const toggleCheckbox = async (id, done) => {\r\n    if (done) {\r\n      await db.collection(selectedTable).doc({ id: id }).update({\r\n        done: false,\r\n      });\r\n    } else {\r\n      await db.collection(selectedTable).doc({ id: id }).update({\r\n        done: true,\r\n      });\r\n    }\r\n\r\n    getItems();\r\n  };\r\n\r\n  return (\r\n    <div className=\"selectedTable\">\r\n      {selectedTable && (\r\n        <>\r\n          <div className=\"selectedTable__header\">{selectedTable}</div>\r\n          <div className=\"selectedTableList\">\r\n            {items && (\r\n              <ul>\r\n                {items.map((item) => {\r\n                  return (\r\n                    <DocumentItem\r\n                      toggleCheckbox={toggleCheckbox}\r\n                      handleDelete={handleDelete}\r\n                      item={item}\r\n                    />\r\n                  );\r\n                })}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {showNewItemField && (\r\n        <NewItemField\r\n          handleClick={() => toggleNewItemField(false)}\r\n          createNewField={createNewField}\r\n        />\r\n      )}\r\n\r\n      <NewItemButton\r\n        toggleNewItemField={() => toggleNewItemField(true)}\r\n        color=\"primary\"\r\n      >\r\n        <AddIcon style={{ color: \"white\" }} />\r\n      </NewItemButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectedTable;\r\n","D:\\LYWS\\todo2\\todo\\src\\sidebar\\Sidebar.js",["82","83"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport db from \"../localbase\";\r\nimport NewItemField from \"../selectedTable/NewItemField\";\r\n// import ReverseOrderButton from \"../components/assets/ReverseOrderButton\";\r\nimport {\r\n  getCollections,\r\n  overwriteCollections,\r\n} from \"../localbaseFunctions\";\r\nimport NewItemButton from \"../components/assets/NewItemButton\";\r\nimport Collections from \"./Collections\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\n\r\nfunction Sidebar(props) {\r\n  const [showNewItemField, setShowNewItemField] = useState(false);\r\n  const [collections, setCollections] = useState();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setCollections(await getCollections());\r\n    })();\r\n  }, []);\r\n\r\n  const createNewCollection = async (e, value) => {\r\n    e.preventDefault();\r\n\r\n    let tableNameAlreadyExists = await checkIfTableNameAlreadyExists(value);\r\n\r\n    if (tableNameAlreadyExists) {\r\n      alert(\"Der Name existiert bereits\");\r\n    } else if (value === \"\") {\r\n      alert(\"Bitten geben Sie einen Namen für die Liste an!\");\r\n    } else {\r\n      let latestID = await getLatestID();\r\n      await addNewCollection(latestID, value);\r\n      iniateNewCollection(value);\r\n      changeTable();\r\n\r\n      setShowNewItemField(false);\r\n      setCollections(await getCollections());\r\n    }\r\n  };\r\n\r\n  const checkIfTableNameAlreadyExists = async (name) => {\r\n    let collections = await getCollections();\r\n\r\n    if (collections.length === 0) return false;\r\n\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].name === name) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const iniateNewCollection = async (collection) => {\r\n    await db.collection(collection).get();\r\n  };\r\n\r\n  const getLatestID = async () => {\r\n    let latestID = 0;\r\n    let collections = await getCollections();\r\n    if (collections.length === 0) return latestID;\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].id > latestID) latestID = collections[i].id;\r\n    }\r\n    return latestID;\r\n  };\r\n\r\n  const addNewCollection = async (latestID, value) => {\r\n    let collections = await getCollections();\r\n\r\n    collections.unshift({\r\n      id: latestID + 1,\r\n      name: value,\r\n    });\r\n\r\n    overwriteCollections(collections);\r\n  };\r\n\r\n  const changeTable = async () => {\r\n    const collectionList = await db.collection(\"collections\").get();\r\n    props.handleCollectionChange(collectionList.data[0].name);\r\n  };\r\n\r\n  const reverseOrderOfCollections = async () => {\r\n    let collections = await getCollections();\r\n    let reverseCollections = collections.reverse();\r\n\r\n    setCollections(reverseCollections);\r\n    overwriteCollections(reverseCollections);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     setCollections(await getCollections())\r\n  //   })();\r\n  // }, [orderOfCollections])\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebarActions\">\r\n        <div className=\"sidebar__newListBtn\">\r\n          <NewItemButton\r\n            color=\"default\"\r\n            toggleNewItemField={() => setShowNewItemField(true)}\r\n          >\r\n            <AddIcon />\r\n          </NewItemButton>\r\n        </div>\r\n\r\n        <div className=\"sidebar__reverseOrder\">\r\n          {/* <ReverseOrderButton reverseOrder={reverseOrderOfCollections}>\r\n            <ImportExportIcon />\r\n          </ReverseOrderButton> */}\r\n        </div>\r\n      </div>\r\n\r\n      {showNewItemField && (\r\n        <NewItemField\r\n          handleClick={() => setShowNewItemField(false)}\r\n          createNewField={createNewCollection}\r\n        />\r\n      )}\r\n      <Collections\r\n        handleDelete={async () => {\r\n          setCollections(await getCollections());\r\n          props.handleCollectionChange(null);\r\n        }}\r\n        handleCollectionChange={props.handleCollectionChange}\r\n        colls={collections}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","D:\\LYWS\\todo2\\todo\\src\\components\\Button.js",["84"],"import React from 'react';\r\nimport './Button.sass';\r\n\r\nfunction Button(props) {\r\n    const {children, value} = props;\r\n\r\n    return (\r\n        <button className=\"customButton\">\r\n            {value}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","D:\\LYWS\\todo2\\todo\\src\\selectedTable\\NewItemField.js",[],"D:\\LYWS\\todo2\\todo\\src\\selectedTable\\DocumentItem.js",[],"D:\\LYWS\\todo2\\todo\\src\\sidebar\\Collections.js",[],"D:\\LYWS\\todo2\\todo\\src\\sidebar\\CollectionItem.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":22,"column":6,"nodeType":"91","endLine":22,"endColumn":19,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":15},{"ruleId":"89","severity":1,"message":"97","line":10,"column":3,"nodeType":"95","endLine":10,"endColumn":12,"suggestions":"98"},{"ruleId":"89","severity":1,"message":"99","line":18,"column":6,"nodeType":"91","endLine":18,"endColumn":21,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"101","line":13,"column":8,"nodeType":"95","messageId":"96","endLine":13,"endColumn":24},{"ruleId":"93","severity":1,"message":"102","line":89,"column":9,"nodeType":"95","messageId":"96","endLine":89,"endColumn":34},{"ruleId":"93","severity":1,"message":"103","line":5,"column":12,"nodeType":"95","messageId":"96","endLine":5,"endColumn":20},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["106"],"no-unused-vars","'Sidebar' is defined but never used.","Identifier","unusedVar","React Hook useEffect contains a call to 'setSelectedTable'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [selectedList] as a second argument to the useEffect Hook.",["107"],"React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.",["108"],"'ImportExportIcon' is defined but never used.","'reverseOrderOfCollections' is assigned a value but never used.","'children' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [collections, props]",{"range":"115","text":"116"},"Add dependencies array: [selectedList]",{"range":"117","text":"118"},"Update the dependencies array to be: [getItems, selectedTable]",{"range":"119","text":"120"},[584,597],"[collections, props]",[362,362],", [selectedList]",[577,592],"[getItems, selectedTable]"]