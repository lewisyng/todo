[{"C:\\LYWS\\todo\\todo\\src\\index.tsx":"1","C:\\LYWS\\todo\\todo\\src\\components\\app\\App.tsx":"2","C:\\LYWS\\todo\\todo\\src\\components\\main\\Main.tsx":"3","C:\\LYWS\\todo\\todo\\src\\components\\Header\\Header.tsx":"4","C:\\LYWS\\todo\\todo\\src\\store\\actions\\index.ts":"5","C:\\LYWS\\todo\\todo\\src\\currentCollection\\CurrentCollection.tsx":"6","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Heading.tsx":"7","C:\\LYWS\\todo\\todo\\src\\components\\NewList\\NewList.tsx":"8","C:\\LYWS\\todo\\todo\\src\\components\\ListMenu\\ListMenu.tsx":"9","C:\\LYWS\\todo\\todo\\src\\store\\reducers\\index.ts":"10","C:\\LYWS\\todo\\todo\\src\\localbaseFunctions.tsx":"11","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Button.tsx":"12","C:\\LYWS\\todo\\todo\\src\\components\\list\\List.tsx":"13","C:\\LYWS\\todo\\todo\\src\\components\\ListMenuItem\\ListMenuItem.tsx":"14","C:\\LYWS\\todo\\todo\\src\\localbase.js":"15","C:\\LYWS\\todo\\todo\\src\\styles\\colors.ts":"16","C:\\LYWS\\todo\\todo\\src\\components\\Listitem\\ListItem.tsx":"17","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewTodoItem.tsx":"18","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewDetailedItem.tsx":"19","C:\\LYWS\\todo\\todo\\src\\components\\itemSettings\\ItemSettings.tsx":"20","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Content.tsx":"21","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewSubtaskItem.tsx":"22","C:\\LYWS\\todo\\todo\\src\\store\\store\\index.ts":"23","C:\\LYWS\\todo\\todo\\src\\components\\Sidebar\\Sidebar.tsx":"24","C:\\LYWS\\todo\\todo\\src\\components\\Actions\\NewCollectionAction.tsx":"25"},{"size":382,"mtime":1637183019562,"results":"26","hashOfConfig":"27"},{"size":777,"mtime":1637180552807,"results":"28","hashOfConfig":"27"},{"size":417,"mtime":1637180552811,"results":"29","hashOfConfig":"27"},{"size":502,"mtime":1637502436213,"results":"30","hashOfConfig":"27"},{"size":6522,"mtime":1637167939651,"results":"31","hashOfConfig":"27"},{"size":1738,"mtime":1637500137589,"results":"32","hashOfConfig":"27"},{"size":1244,"mtime":1637457661861,"results":"33","hashOfConfig":"27"},{"size":2807,"mtime":1637183312231,"results":"34","hashOfConfig":"27"},{"size":1268,"mtime":1637183054859,"results":"35","hashOfConfig":"27"},{"size":1296,"mtime":1637167883277,"results":"36","hashOfConfig":"27"},{"size":7827,"mtime":1637167883266,"results":"37","hashOfConfig":"27"},{"size":1660,"mtime":1637500666782,"results":"38","hashOfConfig":"27"},{"size":3933,"mtime":1637500097081,"results":"39","hashOfConfig":"27"},{"size":985,"mtime":1637183095601,"results":"40","hashOfConfig":"27"},{"size":93,"mtime":1631995187554,"results":"41","hashOfConfig":"27"},{"size":425,"mtime":1631995187566,"results":"42","hashOfConfig":"27"},{"size":4024,"mtime":1637510631962,"results":"43","hashOfConfig":"27"},{"size":1308,"mtime":1631995187545,"results":"44","hashOfConfig":"27"},{"size":3008,"mtime":1637183381547,"results":"45","hashOfConfig":"27"},{"size":3237,"mtime":1637183330064,"results":"46","hashOfConfig":"27"},{"size":369,"mtime":1631995187548,"results":"47","hashOfConfig":"27"},{"size":1342,"mtime":1631995187544,"results":"48","hashOfConfig":"27"},{"size":378,"mtime":1637167939653,"results":"49","hashOfConfig":"27"},{"size":1605,"mtime":1637450897839,"results":"50","hashOfConfig":"27"},{"size":2945,"mtime":1637430136910,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1w33uji",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},"C:\\LYWS\\todo\\todo\\src\\index.tsx",[],["108","109"],"C:\\LYWS\\todo\\todo\\src\\components\\app\\App.tsx",["110"],"import { FunctionComponent } from \"react\";\r\nimport \"./App.sass\";\r\nimport Header from \"../Header/Header\";\r\nimport Main from \"../main/Main\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { setUp } from \"../../store/actions\";\r\n\r\nconst App: FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setUp());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\main\\Main.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\Header\\Header.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\actions\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\currentCollection\\CurrentCollection.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Heading.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\NewList\\NewList.tsx",["111"],"import { FunctionComponent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./NewList.sass\";\r\nimport { addNewCollection, getCollections } from \"../../localbaseFunctions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setCollections } from \"../../store/actions\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { Dialog, DialogContent, DialogContentText, TextField } from \"@mui/material\";\r\n\r\nconst NewList: FunctionComponent = () => {\r\n  const store = useSelector((state) => state);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const createNewCollection = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    let tableNameAlreadyExists = await checkIfTableNameAlreadyExists(userInput);\r\n\r\n    if (tableNameAlreadyExists) {\r\n      alert(\"Der Name existiert bereits\");\r\n    } else if (userInput === \"\") {\r\n      alert(\"Bitten geben Sie einen Namen fÃ¼r die Liste an!\");\r\n    } else {\r\n      let latestID = await getLatestID();\r\n      await addNewCollection(latestID, userInput);\r\n\r\n      await getCollections().then((data) => {\r\n        dispatch(setCollections(data));\r\n      });\r\n    }\r\n    setDialogIsOpen(false);\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  const checkIfTableNameAlreadyExists = async (name: string) => {\r\n    let collections = await getCollections();\r\n\r\n    if (collections.length === 0) return false;\r\n\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].name === name) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const getLatestID = async () => {\r\n    let latestID = 0;\r\n    await getCollections().then((collections) => {\r\n      if (!collections.length) return;\r\n      for (let collection of collections) {\r\n        if (collection.id > latestID) latestID = collection.id;\r\n      }\r\n    });\r\n    return latestID + 1;\r\n  };\r\n\r\n  return (\r\n    <div className=\"newList\">\r\n      <IconButton onClick={() => setDialogIsOpen((prev) => !prev)}>\r\n        <AddIcon />\r\n      </IconButton>\r\n\r\n      <Dialog open={dialogIsOpen} onClose={() => setDialogIsOpen(false)}>\r\n        <DialogContent>\r\n          <form\r\n            autoComplete=\"off\"\r\n            onSubmit={(event) => createNewCollection(event)}\r\n          >\r\n            <DialogContentText>\r\n              Geben Sie einen Namen fÃ¼r Ihre Liste ein\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              onChange={(event) => setUserInput(event.target.value)}\r\n              value={userInput}\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewList;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\ListMenu\\ListMenu.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\reducers\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\localbaseFunctions.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Button.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\list\\List.tsx",["112","113"],"import { FunctionComponent, useRef, useState } from \"react\";\r\nimport styles from \"./List.module.sass\";\r\nimport { deleteList, getCollection } from \"../../localbaseFunctions\";\r\nimport ListItem from \"../Listitem/ListItem\";\r\nimport NewTodoItem from \"../newItem/NewTodoItem\";\r\nimport NewDetailedItem from \"../newItem/NewDetailedItem\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteEntireList } from \"../../store/actions\";\r\nimport { ListType } from \"../../../lib/types\";\r\nimport Heading from \"../ui/Heading\";\r\n// import Button from \"../ui/Button\";\r\nimport {\r\n  ButtonGroup,\r\n  Grow,\r\n  MenuItem,\r\n  MenuList,\r\n  Paper,\r\n  Popper,\r\n} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ClickAwayListener from \"@mui/core/ClickAwayListener\";\r\n\r\ntype Props = {\r\n  list: ListType;\r\n};\r\n\r\nconst List: FunctionComponent<Props> = ({ list }) => {\r\n  const { currentCollectionName } = useSelector((state: any) => state);\r\n  const dispatch = useDispatch();\r\n  const [showNewItemField, setShowNewItemField] = useState<boolean>(false);\r\n  const [showNewDetailedItem, setShowNewDetailedItem] =\r\n    useState<boolean>(false);\r\n  const [showNewDropdown, setShowNewDropdown] = useState<boolean>(false);\r\n  const anchorRef = useRef(null);\r\n\r\n  return (\r\n    <div className={styles.list}>\r\n      <div className={styles.listHeader}>\r\n        <Heading className={styles.listHeader__title}>{list.name}</Heading>\r\n        <ButtonGroup variant=\"text\" ref={anchorRef}>\r\n          <Button\r\n            onClick={() =>\r\n              dispatch(deleteEntireList(currentCollectionName, list))\r\n            }\r\n          >\r\n            <DeleteIcon />\r\n          </Button>\r\n          <Button onClick={() => setShowNewDropdown(!showNewDropdown)}>\r\n            <AddIcon />\r\n          </Button>\r\n        </ButtonGroup>\r\n        <Popper\r\n          open={showNewDropdown}\r\n          anchorEl={anchorRef.current}\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener\r\n                  onClickAway={() => setShowNewDropdown(false)}\r\n                >\r\n                  <MenuList id=\"split-button-menu\">\r\n                    <MenuItem onClick={() => setShowNewItemField(true)}>\r\n                      Schnell-Eintrag\r\n                    </MenuItem>\r\n                    <MenuItem onClick={() => setShowNewDetailedItem(true)}>\r\n                      Detail-Eintrag\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n\r\n      <div className={styles.list__listItems}>\r\n        {showNewItemField && (\r\n          <NewTodoItem\r\n            list={list}\r\n            handleClose={() => setShowNewItemField(false)}\r\n          />\r\n        )}\r\n\r\n        {list.todos.map((listItem) => (\r\n          <>\r\n            <ListItem\r\n              type=\"task\"\r\n              key={listItem.id.task}\r\n              list={list}\r\n              listItem={listItem}\r\n            />\r\n            {listItem.subtasks.map((subtask) => (\r\n              <ListItem\r\n                type=\"subtask\"\r\n                key={subtask.id[\"subtask\"]}\r\n                list={list}\r\n                listItem={subtask}\r\n              />\r\n            ))}\r\n          </>\r\n        ))}\r\n      </div>\r\n\r\n      <NewDetailedItem\r\n        open={showNewDetailedItem}\r\n        handleClose={() => setShowNewDetailedItem(false)}\r\n        list={list}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\ListMenuItem\\ListMenuItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\localbase.js",[],["114","115"],"C:\\LYWS\\todo\\todo\\src\\styles\\colors.ts",[],"C:\\LYWS\\todo\\todo\\src\\components\\Listitem\\ListItem.tsx",["116","117","118","119","120"],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewTodoItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewDetailedItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\itemSettings\\ItemSettings.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Content.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewSubtaskItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\store\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\components\\Sidebar\\Sidebar.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\Actions\\NewCollectionAction.tsx",["121"],"import React, { useState } from \"react\";\r\nimport cs from \"classnames\";\r\nimport styles from \"./NewCollectionAction.module.sass\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  IconButton,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addNewCollection, getCollections } from \"src/localbaseFunctions\";\r\nimport { setCollections } from \"src/store/actions\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nexport const NewCollectionAction = () => {\r\n  const store = useSelector((state: any) => state);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const createNewCollection = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    let tableNameAlreadyExists = await checkIfTableNameAlreadyExists(userInput);\r\n\r\n    if (tableNameAlreadyExists) {\r\n      alert(\"Der Name existiert bereits\");\r\n    } else if (userInput === \"\") {\r\n      alert(\"Bitten geben Sie einen Namen fÃ¼r die Liste an!\");\r\n    } else {\r\n      let latestID = await getLatestID();\r\n      await addNewCollection(latestID, userInput);\r\n\r\n      await getCollections().then((data) => {\r\n        dispatch(setCollections(data));\r\n      });\r\n    }\r\n    setDialogIsOpen(false);\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  const checkIfTableNameAlreadyExists = async (name: string) => {\r\n    let collections = await getCollections();\r\n\r\n    if (collections.length === 0) return false;\r\n\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].name === name) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const getLatestID = async () => {\r\n    let latestID = 0;\r\n    await getCollections().then((collections) => {\r\n      if (!collections.length) return;\r\n      for (let collection of collections) {\r\n        if (collection.id > latestID) latestID = collection.id;\r\n      }\r\n    });\r\n    return latestID + 1;\r\n  };\r\n  return (\r\n    <div className={cs(styles.NewCollectionAction, styles.action)}>\r\n      <IconButton onClick={() => setDialogIsOpen((prev: any) => !prev)}>\r\n        <AddIcon />\r\n      </IconButton>\r\n\r\n      <Dialog open={dialogIsOpen} onClose={() => setDialogIsOpen(false)}>\r\n        <DialogContent>\r\n          <form\r\n            autoComplete=\"off\"\r\n            onSubmit={(event) => createNewCollection(event)}\r\n          >\r\n            <DialogContentText>\r\n              Geben Sie einen Namen fÃ¼r Ihre Liste ein\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              onChange={(event) => setUserInput(event.target.value)}\r\n              value={userInput}\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <Button onClick={() => setDialogIsOpen(false)}>Create</Button>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCollectionAction;\r\n",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":15,"column":6,"nodeType":"128","endLine":15,"endColumn":8,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":12,"column":9,"nodeType":"132","messageId":"133","endLine":12,"endColumn":14},{"ruleId":"130","severity":1,"message":"134","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":20},{"ruleId":"130","severity":1,"message":"135","line":3,"column":22,"nodeType":"132","messageId":"133","endLine":3,"endColumn":35},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"130","severity":1,"message":"136","line":1,"column":29,"nodeType":"132","messageId":"133","endLine":1,"endColumn":35},{"ruleId":"130","severity":1,"message":"137","line":10,"column":8,"nodeType":"132","messageId":"133","endLine":10,"endColumn":18},{"ruleId":"130","severity":1,"message":"138","line":11,"column":8,"nodeType":"132","messageId":"133","endLine":11,"endColumn":15},{"ruleId":"130","severity":1,"message":"139","line":12,"column":8,"nodeType":"132","messageId":"133","endLine":12,"endColumn":20},{"ruleId":"130","severity":1,"message":"140","line":14,"column":8,"nodeType":"132","messageId":"133","endLine":14,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":18,"column":9,"nodeType":"132","messageId":"133","endLine":18,"endColumn":14},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["143"],"@typescript-eslint/no-unused-vars","'store' is assigned a value but never used.","Identifier","unusedVar","'deleteList' is defined but never used.","'getCollection' is defined but never used.","'useRef' is defined but never used.","'DeleteIcon' is defined but never used.","'AddIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'IconButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},"Update the dependencies array to be: [dispatch]",{"range":"146","text":"147"},[499,501],"[dispatch]"]