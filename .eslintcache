[{"C:\\LYWS\\todo\\todo\\src\\index.tsx":"1","C:\\LYWS\\todo\\todo\\src\\components\\app\\App.tsx":"2","C:\\LYWS\\todo\\todo\\src\\components\\main\\Main.tsx":"3","C:\\LYWS\\todo\\todo\\src\\components\\Header\\Header.tsx":"4","C:\\LYWS\\todo\\todo\\src\\store\\actions\\index.ts":"5","C:\\LYWS\\todo\\todo\\src\\currentCollection\\CurrentCollection.tsx":"6","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Heading.tsx":"7","C:\\LYWS\\todo\\todo\\src\\components\\NewList\\NewList.tsx":"8","C:\\LYWS\\todo\\todo\\src\\components\\ListMenu\\ListMenu.tsx":"9","C:\\LYWS\\todo\\todo\\src\\store\\reducers\\index.ts":"10","C:\\LYWS\\todo\\todo\\src\\localbaseFunctions.tsx":"11","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Button.tsx":"12","C:\\LYWS\\todo\\todo\\src\\components\\list\\List.tsx":"13","C:\\LYWS\\todo\\todo\\src\\components\\ListMenuItem\\ListMenuItem.tsx":"14","C:\\LYWS\\todo\\todo\\src\\localbase.js":"15","C:\\LYWS\\todo\\todo\\src\\styles\\colors.ts":"16","C:\\LYWS\\todo\\todo\\src\\components\\Listitem\\ListItem.tsx":"17","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewTodoItem.tsx":"18","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewDetailedItem.tsx":"19","C:\\LYWS\\todo\\todo\\src\\components\\itemSettings\\ItemSettings.tsx":"20","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Content.tsx":"21","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewSubtaskItem.tsx":"22","C:\\LYWS\\todo\\todo\\src\\store\\store\\index.ts":"23","C:\\LYWS\\todo\\todo\\src\\components\\Sidebar\\Sidebar.tsx":"24","C:\\LYWS\\todo\\todo\\src\\components\\Actions\\NewCollectionAction.tsx":"25"},{"size":382,"mtime":1637183019562,"results":"26","hashOfConfig":"27"},{"size":777,"mtime":1637180552807,"results":"28","hashOfConfig":"27"},{"size":417,"mtime":1637180552811,"results":"29","hashOfConfig":"27"},{"size":502,"mtime":1637502436213,"results":"30","hashOfConfig":"27"},{"size":6522,"mtime":1637167939651,"results":"31","hashOfConfig":"27"},{"size":1738,"mtime":1637500137589,"results":"32","hashOfConfig":"27"},{"size":1245,"mtime":1637528533596,"results":"33","hashOfConfig":"27"},{"size":2807,"mtime":1637183312231,"results":"34","hashOfConfig":"27"},{"size":1268,"mtime":1637183054859,"results":"35","hashOfConfig":"27"},{"size":1296,"mtime":1637167883277,"results":"36","hashOfConfig":"27"},{"size":7827,"mtime":1637167883266,"results":"37","hashOfConfig":"27"},{"size":1660,"mtime":1637500666782,"results":"38","hashOfConfig":"27"},{"size":3963,"mtime":1637528533595,"results":"39","hashOfConfig":"27"},{"size":985,"mtime":1637183095601,"results":"40","hashOfConfig":"27"},{"size":93,"mtime":1631995187554,"results":"41","hashOfConfig":"27"},{"size":425,"mtime":1631995187566,"results":"42","hashOfConfig":"27"},{"size":4054,"mtime":1637529578601,"results":"43","hashOfConfig":"27"},{"size":1308,"mtime":1631995187545,"results":"44","hashOfConfig":"27"},{"size":3008,"mtime":1637183381547,"results":"45","hashOfConfig":"27"},{"size":3237,"mtime":1637183330064,"results":"46","hashOfConfig":"27"},{"size":369,"mtime":1631995187548,"results":"47","hashOfConfig":"27"},{"size":1342,"mtime":1631995187544,"results":"48","hashOfConfig":"27"},{"size":378,"mtime":1637167939653,"results":"49","hashOfConfig":"27"},{"size":1605,"mtime":1637450897839,"results":"50","hashOfConfig":"27"},{"size":2945,"mtime":1637430136910,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1w33uji",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},"C:\\LYWS\\todo\\todo\\src\\index.tsx",[],["107","108"],"C:\\LYWS\\todo\\todo\\src\\components\\app\\App.tsx",["109"],"import { FunctionComponent } from \"react\";\r\nimport \"./App.sass\";\r\nimport Header from \"../Header/Header\";\r\nimport Main from \"../main/Main\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { setUp } from \"../../store/actions\";\r\n\r\nconst App: FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setUp());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\main\\Main.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\Header\\Header.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\actions\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\currentCollection\\CurrentCollection.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Heading.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\NewList\\NewList.tsx",["110"],"import { FunctionComponent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./NewList.sass\";\r\nimport { addNewCollection, getCollections } from \"../../localbaseFunctions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setCollections } from \"../../store/actions\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { Dialog, DialogContent, DialogContentText, TextField } from \"@mui/material\";\r\n\r\nconst NewList: FunctionComponent = () => {\r\n  const store = useSelector((state) => state);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const createNewCollection = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    let tableNameAlreadyExists = await checkIfTableNameAlreadyExists(userInput);\r\n\r\n    if (tableNameAlreadyExists) {\r\n      alert(\"Der Name existiert bereits\");\r\n    } else if (userInput === \"\") {\r\n      alert(\"Bitten geben Sie einen Namen fÃ¼r die Liste an!\");\r\n    } else {\r\n      let latestID = await getLatestID();\r\n      await addNewCollection(latestID, userInput);\r\n\r\n      await getCollections().then((data) => {\r\n        dispatch(setCollections(data));\r\n      });\r\n    }\r\n    setDialogIsOpen(false);\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  const checkIfTableNameAlreadyExists = async (name: string) => {\r\n    let collections = await getCollections();\r\n\r\n    if (collections.length === 0) return false;\r\n\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].name === name) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const getLatestID = async () => {\r\n    let latestID = 0;\r\n    await getCollections().then((collections) => {\r\n      if (!collections.length) return;\r\n      for (let collection of collections) {\r\n        if (collection.id > latestID) latestID = collection.id;\r\n      }\r\n    });\r\n    return latestID + 1;\r\n  };\r\n\r\n  return (\r\n    <div className=\"newList\">\r\n      <IconButton onClick={() => setDialogIsOpen((prev) => !prev)}>\r\n        <AddIcon />\r\n      </IconButton>\r\n\r\n      <Dialog open={dialogIsOpen} onClose={() => setDialogIsOpen(false)}>\r\n        <DialogContent>\r\n          <form\r\n            autoComplete=\"off\"\r\n            onSubmit={(event) => createNewCollection(event)}\r\n          >\r\n            <DialogContentText>\r\n              Geben Sie einen Namen fÃ¼r Ihre Liste ein\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              onChange={(event) => setUserInput(event.target.value)}\r\n              value={userInput}\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewList;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\ListMenu\\ListMenu.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\reducers\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\localbaseFunctions.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Button.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\list\\List.tsx",["111","112"],"C:\\LYWS\\todo\\todo\\src\\components\\ListMenuItem\\ListMenuItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\localbase.js",[],["113","114"],"C:\\LYWS\\todo\\todo\\src\\styles\\colors.ts",[],"C:\\LYWS\\todo\\todo\\src\\components\\Listitem\\ListItem.tsx",["115"],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewTodoItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewDetailedItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\itemSettings\\ItemSettings.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Content.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewSubtaskItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\store\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\components\\Sidebar\\Sidebar.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\Actions\\NewCollectionAction.tsx",["116"],"import React, { useState } from \"react\";\r\nimport cs from \"classnames\";\r\nimport styles from \"./NewCollectionAction.module.sass\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  IconButton,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addNewCollection, getCollections } from \"src/localbaseFunctions\";\r\nimport { setCollections } from \"src/store/actions\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nexport const NewCollectionAction = () => {\r\n  const store = useSelector((state: any) => state);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const createNewCollection = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    let tableNameAlreadyExists = await checkIfTableNameAlreadyExists(userInput);\r\n\r\n    if (tableNameAlreadyExists) {\r\n      alert(\"Der Name existiert bereits\");\r\n    } else if (userInput === \"\") {\r\n      alert(\"Bitten geben Sie einen Namen fÃ¼r die Liste an!\");\r\n    } else {\r\n      let latestID = await getLatestID();\r\n      await addNewCollection(latestID, userInput);\r\n\r\n      await getCollections().then((data) => {\r\n        dispatch(setCollections(data));\r\n      });\r\n    }\r\n    setDialogIsOpen(false);\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  const checkIfTableNameAlreadyExists = async (name: string) => {\r\n    let collections = await getCollections();\r\n\r\n    if (collections.length === 0) return false;\r\n\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].name === name) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const getLatestID = async () => {\r\n    let latestID = 0;\r\n    await getCollections().then((collections) => {\r\n      if (!collections.length) return;\r\n      for (let collection of collections) {\r\n        if (collection.id > latestID) latestID = collection.id;\r\n      }\r\n    });\r\n    return latestID + 1;\r\n  };\r\n  return (\r\n    <div className={cs(styles.NewCollectionAction, styles.action)}>\r\n      <IconButton onClick={() => setDialogIsOpen((prev: any) => !prev)}>\r\n        <AddIcon />\r\n      </IconButton>\r\n\r\n      <Dialog open={dialogIsOpen} onClose={() => setDialogIsOpen(false)}>\r\n        <DialogContent>\r\n          <form\r\n            autoComplete=\"off\"\r\n            onSubmit={(event) => createNewCollection(event)}\r\n          >\r\n            <DialogContentText>\r\n              Geben Sie einen Namen fÃ¼r Ihre Liste ein\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              onChange={(event) => setUserInput(event.target.value)}\r\n              value={userInput}\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <Button onClick={() => setDialogIsOpen(false)}>Create</Button>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCollectionAction;\r\n",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":15,"column":6,"nodeType":"123","endLine":15,"endColumn":8,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":12,"column":9,"nodeType":"127","messageId":"128","endLine":12,"endColumn":14},{"ruleId":"125","severity":1,"message":"129","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":20},{"ruleId":"125","severity":1,"message":"130","line":3,"column":22,"nodeType":"127","messageId":"128","endLine":3,"endColumn":35},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"125","severity":1,"message":"131","line":1,"column":29,"nodeType":"127","messageId":"128","endLine":1,"endColumn":35},{"ruleId":"125","severity":1,"message":"126","line":18,"column":9,"nodeType":"127","messageId":"128","endLine":18,"endColumn":14},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["134"],"@typescript-eslint/no-unused-vars","'store' is assigned a value but never used.","Identifier","unusedVar","'deleteList' is defined but never used.","'getCollection' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [dispatch]",{"range":"137","text":"138"},[499,501],"[dispatch]"]