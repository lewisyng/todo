[{"C:\\LYWS\\todo\\todo\\src\\index.tsx":"1","C:\\LYWS\\todo\\todo\\src\\components\\app\\App.tsx":"2","C:\\LYWS\\todo\\todo\\src\\components\\main\\Main.tsx":"3","C:\\LYWS\\todo\\todo\\src\\components\\Header\\Header.tsx":"4","C:\\LYWS\\todo\\todo\\src\\store\\actions\\index.ts":"5","C:\\LYWS\\todo\\todo\\src\\components\\NewList\\NewList.tsx":"6","C:\\LYWS\\todo\\todo\\src\\components\\ListMenu\\ListMenu.tsx":"7","C:\\LYWS\\todo\\todo\\src\\store\\reducers\\index.ts":"8","C:\\LYWS\\todo\\todo\\src\\localbaseFunctions.tsx":"9","C:\\LYWS\\todo\\todo\\src\\components\\ListMenuItem\\ListMenuItem.tsx":"10","C:\\LYWS\\todo\\todo\\src\\localbase.js":"11","C:\\LYWS\\todo\\todo\\src\\styles\\colors.ts":"12","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewTodoItem.tsx":"13","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewDetailedItem.tsx":"14","C:\\LYWS\\todo\\todo\\src\\components\\itemSettings\\ItemSettings.tsx":"15","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Content.tsx":"16","C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewSubtaskItem.tsx":"17","C:\\LYWS\\todo\\todo\\src\\store\\store\\index.ts":"18","C:\\LYWS\\todo\\todo\\src\\components\\Sidebar\\Sidebar.tsx":"19","C:\\LYWS\\todo\\todo\\src\\components\\Actions\\NewCollectionAction.tsx":"20","C:\\LYWS\\todo\\todo\\src\\board\\Board.tsx":"21","C:\\LYWS\\todo\\todo\\src\\components\\ui\\button\\Button.tsx":"22","C:\\LYWS\\todo\\todo\\src\\components\\CreateColumn\\CreateColumn.tsx":"23","C:\\LYWS\\todo\\todo\\src\\database.ts":"24","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Heading\\Heading.tsx":"25","C:\\LYWS\\todo\\todo\\src\\components\\ui\\Button\\Button.tsx":"26","C:\\LYWS\\todo\\todo\\src\\components\\CreateItem\\CreateItem.tsx":"27","C:\\LYWS\\todo\\todo\\src\\components\\Column\\Column.tsx":"28","C:\\LYWS\\todo\\todo\\src\\components\\ColumnItem\\ColumnItem.tsx":"29","C:\\LYWS\\todo\\todo\\src\\components\\Modals\\DeleteColumnModal.tsx":"30"},{"size":382,"mtime":1647207834917,"results":"31","hashOfConfig":"32"},{"size":569,"mtime":1647210198657,"results":"33","hashOfConfig":"32"},{"size":417,"mtime":1637180552811,"results":"34","hashOfConfig":"32"},{"size":502,"mtime":1647208368947,"results":"35","hashOfConfig":"32"},{"size":6522,"mtime":1637167939651,"results":"36","hashOfConfig":"32"},{"size":2807,"mtime":1637183312231,"results":"37","hashOfConfig":"32"},{"size":1275,"mtime":1647215943863,"results":"38","hashOfConfig":"32"},{"size":1296,"mtime":1637167883277,"results":"39","hashOfConfig":"32"},{"size":7827,"mtime":1637167883266,"results":"40","hashOfConfig":"32"},{"size":985,"mtime":1637183095601,"results":"41","hashOfConfig":"32"},{"size":93,"mtime":1631995187554,"results":"42","hashOfConfig":"32"},{"size":425,"mtime":1631995187566,"results":"43","hashOfConfig":"32"},{"size":1308,"mtime":1631995187545,"results":"44","hashOfConfig":"32"},{"size":3714,"mtime":1647213315938,"results":"45","hashOfConfig":"32"},{"size":3237,"mtime":1637183330064,"results":"46","hashOfConfig":"32"},{"size":369,"mtime":1631995187548,"results":"47","hashOfConfig":"32"},{"size":1335,"mtime":1647269218543,"results":"48","hashOfConfig":"32"},{"size":378,"mtime":1637167939653,"results":"49","hashOfConfig":"32"},{"size":1609,"mtime":1647203934691,"results":"50","hashOfConfig":"32"},{"size":2945,"mtime":1637430136910,"results":"51","hashOfConfig":"32"},{"size":630,"mtime":1647264443789,"results":"52","hashOfConfig":"32"},{"size":902,"mtime":1647215981959,"results":"53","hashOfConfig":"32"},{"size":1232,"mtime":1647269223527,"results":"54","hashOfConfig":"32"},{"size":317,"mtime":1647214290552,"results":"55","hashOfConfig":"32"},{"size":487,"mtime":1647217136422,"results":"56","hashOfConfig":"32"},{"size":902,"mtime":1647215981959,"results":"57","hashOfConfig":"32"},{"size":1258,"mtime":1647264576028,"results":"58","hashOfConfig":"32"},{"size":2872,"mtime":1647264277705,"results":"59","hashOfConfig":"32"},{"size":3558,"mtime":1647269187621,"results":"60","hashOfConfig":"32"},{"size":1159,"mtime":1647264499498,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1w33uji",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"99"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\LYWS\\todo\\todo\\src\\index.tsx",[],["133","134"],"C:\\LYWS\\todo\\todo\\src\\components\\app\\App.tsx",["135","136"],"import { FunctionComponent } from 'react';\r\nimport styles from './App.module.sass';\r\nimport Header from '../Header/Header';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { setUp } from '../../store/actions';\r\nimport Board from 'src/board/Board';\r\n// import Sidebar from '../Sidebar/Sidebar';\r\n\r\nconst App: FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setUp());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Board />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\main\\Main.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\Header\\Header.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\actions\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\components\\NewList\\NewList.tsx",["137"],"import { FunctionComponent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./NewList.sass\";\r\nimport { addNewCollection, getCollections } from \"../../localbaseFunctions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setCollections } from \"../../store/actions\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { Dialog, DialogContent, DialogContentText, TextField } from \"@mui/material\";\r\n\r\nconst NewList: FunctionComponent = () => {\r\n  const store = useSelector((state) => state);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const createNewCollection = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    let tableNameAlreadyExists = await checkIfTableNameAlreadyExists(userInput);\r\n\r\n    if (tableNameAlreadyExists) {\r\n      alert(\"Der Name existiert bereits\");\r\n    } else if (userInput === \"\") {\r\n      alert(\"Bitten geben Sie einen Namen für die Liste an!\");\r\n    } else {\r\n      let latestID = await getLatestID();\r\n      await addNewCollection(latestID, userInput);\r\n\r\n      await getCollections().then((data) => {\r\n        dispatch(setCollections(data));\r\n      });\r\n    }\r\n    setDialogIsOpen(false);\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  const checkIfTableNameAlreadyExists = async (name: string) => {\r\n    let collections = await getCollections();\r\n\r\n    if (collections.length === 0) return false;\r\n\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].name === name) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const getLatestID = async () => {\r\n    let latestID = 0;\r\n    await getCollections().then((collections) => {\r\n      if (!collections.length) return;\r\n      for (let collection of collections) {\r\n        if (collection.id > latestID) latestID = collection.id;\r\n      }\r\n    });\r\n    return latestID + 1;\r\n  };\r\n\r\n  return (\r\n    <div className=\"newList\">\r\n      <IconButton onClick={() => setDialogIsOpen((prev) => !prev)}>\r\n        <AddIcon />\r\n      </IconButton>\r\n\r\n      <Dialog open={dialogIsOpen} onClose={() => setDialogIsOpen(false)}>\r\n        <DialogContent>\r\n          <form\r\n            autoComplete=\"off\"\r\n            onSubmit={(event) => createNewCollection(event)}\r\n          >\r\n            <DialogContentText>\r\n              Geben Sie einen Namen für Ihre Liste ein\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              onChange={(event) => setUserInput(event.target.value)}\r\n              value={userInput}\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewList;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\ListMenu\\ListMenu.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\reducers\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\localbaseFunctions.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ListMenuItem\\ListMenuItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\localbase.js",[],["138","139"],"C:\\LYWS\\todo\\todo\\src\\styles\\colors.ts",[],["140","141"],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewTodoItem.tsx",[],["142","143"],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewDetailedItem.tsx",["144","145"],"import React, { BaseSyntheticEvent, FunctionComponent, useState } from \"react\";\r\nimport styles from \"./NewDetailedItem.module.sass\";\r\nimport { ListType } from \"lib/types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNewDetailedTodo } from \"src/store/actions\";\r\nimport Heading from \"../ui/Heading\";\r\nimport Button from \"../ui/Button\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  Modal,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@mui/material\";\r\n\r\ntype Props = {\r\n  open: boolean;\r\n  list: ListType;\r\n  handleClose: () => void;\r\n};\r\n\r\nexport const NewDetailedItem: FunctionComponent<Props> = ({\r\n  open,\r\n  list,\r\n  handleClose,\r\n}) => {\r\n  const store = useSelector((state: any) => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const [newItemData, setNewItemData] = useState<{\r\n    name: string;\r\n    description: string;\r\n    priority: \"low\" | \"medium\" | \"high\";\r\n  }>({\r\n    name: \"\",\r\n    description: \"\",\r\n    priority: \"low\",\r\n  });\r\n\r\n  return (\r\n    <Modal open={open} onClose={handleClose}>\r\n      <div className={styles.newDetailedItem}>\r\n        <Heading>Neuer Eintrag</Heading>\r\n        <form\r\n          className={styles.newDetailedItem__form}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            dispatch(\r\n              createNewDetailedTodo(\r\n                store.currentCollectionName,\r\n                list,\r\n                newItemData\r\n              )\r\n            );\r\n            handleClose();\r\n          }}\r\n        >\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            autoComplete=\"off\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={newItemData.name}\r\n            onChange={(event) =>\r\n              setNewItemData({\r\n                ...newItemData,\r\n                name: event.target.value,\r\n              })\r\n            }\r\n          />\r\n          {/* todo create component for input fields */}\r\n\r\n          <label htmlFor=\"description\">Beschreibung</label>\r\n          <textarea\r\n            autoComplete=\"off\"\r\n            name=\"description\"\r\n            value={newItemData.description}\r\n            onChange={(event) =>\r\n              setNewItemData({\r\n                ...newItemData,\r\n                description: event.target.value,\r\n              })\r\n            }\r\n          />\r\n          <label htmlFor=\"Priority\">Priorität</label>\r\n          <RadioGroup\r\n            onChange={(event: BaseSyntheticEvent) =>\r\n              setNewItemData({\r\n                ...newItemData,\r\n                priority: event.target.value as \"low\" | \"medium\" | \"high\",\r\n              })\r\n            }\r\n            row\r\n            aria-label=\"priority\"\r\n            name=\"row-radio-buttons-group\"\r\n          >\r\n            <FormControlLabel\r\n              sx={{ pr: 3 }}\r\n              defaultChecked\r\n              value=\"low\"\r\n              control={<Radio size=\"small\" />}\r\n              label=\"Low\"\r\n            />\r\n            <FormControlLabel\r\n              sx={{ pr: 3 }}\r\n              value=\"medium\"\r\n              control={<Radio size=\"small\" />}\r\n              label=\"Medium\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"high\"\r\n              control={<Radio size=\"small\" />}\r\n              label=\"High\"\r\n            />\r\n          </RadioGroup>\r\n          <div className={styles.newDetailedItem__form__actions}>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Schließen\r\n            </Button>\r\n            <Button type=\"submit\">Sichern</Button>\r\n          </div>\r\n          {/* open modal with satisfying */}\r\n        </form>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewDetailedItem;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\itemSettings\\ItemSettings.tsx",[],["146","147"],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Content.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\newItem\\NewSubtaskItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\store\\store\\index.ts",[],"C:\\LYWS\\todo\\todo\\src\\components\\Sidebar\\Sidebar.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\Actions\\NewCollectionAction.tsx",["148"],"import React, { useState } from \"react\";\r\nimport cs from \"classnames\";\r\nimport styles from \"./NewCollectionAction.module.sass\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  IconButton,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addNewCollection, getCollections } from \"src/localbaseFunctions\";\r\nimport { setCollections } from \"src/store/actions\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nexport const NewCollectionAction = () => {\r\n  const store = useSelector((state: any) => state);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const createNewCollection = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    let tableNameAlreadyExists = await checkIfTableNameAlreadyExists(userInput);\r\n\r\n    if (tableNameAlreadyExists) {\r\n      alert(\"Der Name existiert bereits\");\r\n    } else if (userInput === \"\") {\r\n      alert(\"Bitten geben Sie einen Namen für die Liste an!\");\r\n    } else {\r\n      let latestID = await getLatestID();\r\n      await addNewCollection(latestID, userInput);\r\n\r\n      await getCollections().then((data) => {\r\n        dispatch(setCollections(data));\r\n      });\r\n    }\r\n    setDialogIsOpen(false);\r\n    setUserInput(\"\");\r\n  };\r\n\r\n  const checkIfTableNameAlreadyExists = async (name: string) => {\r\n    let collections = await getCollections();\r\n\r\n    if (collections.length === 0) return false;\r\n\r\n    for (let i = 0; i < collections.length; i++) {\r\n      if (collections[i].name === name) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const getLatestID = async () => {\r\n    let latestID = 0;\r\n    await getCollections().then((collections) => {\r\n      if (!collections.length) return;\r\n      for (let collection of collections) {\r\n        if (collection.id > latestID) latestID = collection.id;\r\n      }\r\n    });\r\n    return latestID + 1;\r\n  };\r\n  return (\r\n    <div className={cs(styles.NewCollectionAction, styles.action)}>\r\n      <IconButton onClick={() => setDialogIsOpen((prev: any) => !prev)}>\r\n        <AddIcon />\r\n      </IconButton>\r\n\r\n      <Dialog open={dialogIsOpen} onClose={() => setDialogIsOpen(false)}>\r\n        <DialogContent>\r\n          <form\r\n            autoComplete=\"off\"\r\n            onSubmit={(event) => createNewCollection(event)}\r\n          >\r\n            <DialogContentText>\r\n              Geben Sie einen Namen für Ihre Liste ein\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              onChange={(event) => setUserInput(event.target.value)}\r\n              value={userInput}\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <Button onClick={() => setDialogIsOpen(false)}>Create</Button>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCollectionAction;\r\n",["149","150"],"C:\\LYWS\\todo\\todo\\src\\board\\Board.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\button\\Button.tsx",["151"],"import { FunctionComponent } from 'react';\r\nimport styles from './Button.module.sass';\r\nimport cn from 'classnames';\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n  color?: 'default' | 'warning' | 'info';\r\n  fullWidth?: boolean;\r\n  type?: 'submit' | undefined;\r\n  className?: string;\r\n  variant?: 'default' | 'secondary' | 'tertiary' | 'disabled';\r\n  onClick?: () => void;\r\n};\r\n\r\ntype ButtonType = {\r\n  color: Props['color'];\r\n  fullWidth: boolean;\r\n  type: 'submit' | undefined;\r\n  variant: Props['variant'];\r\n};\r\n\r\nconst Button: FunctionComponent<Props> = ({\r\n  children,\r\n  fullWidth,\r\n  variant = 'default',\r\n  type,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <button\r\n      className={cn(styles.button, fullWidth && styles.button__fullWidth)}\r\n      data-type={type}\r\n      data-variant={variant}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","C:\\LYWS\\todo\\todo\\src\\components\\CreateColumn\\CreateColumn.tsx",[],"C:\\LYWS\\todo\\todo\\src\\database.ts",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Heading\\Heading.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ui\\Button\\Button.tsx",["152"],"C:\\LYWS\\todo\\todo\\src\\components\\CreateItem\\CreateItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\Column\\Column.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\ColumnItem\\ColumnItem.tsx",[],"C:\\LYWS\\todo\\todo\\src\\components\\Modals\\DeleteColumnModal.tsx",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":15,"column":6,"nodeType":"163","endLine":15,"endColumn":8,"suggestions":"164"},{"ruleId":"157","severity":1,"message":"165","line":12,"column":9,"nodeType":"159","messageId":"160","endLine":12,"endColumn":14},{"ruleId":"153","replacedBy":"166"},{"ruleId":"155","replacedBy":"167"},{"ruleId":"153","replacedBy":"168"},{"ruleId":"155","replacedBy":"169"},{"ruleId":"153","replacedBy":"170"},{"ruleId":"155","replacedBy":"171"},{"ruleId":"157","severity":1,"message":"172","line":9,"column":3,"nodeType":"159","messageId":"160","endLine":9,"endColumn":14},{"ruleId":"157","severity":1,"message":"173","line":11,"column":3,"nodeType":"159","messageId":"160","endLine":11,"endColumn":12},{"ruleId":"153","replacedBy":"166"},{"ruleId":"155","replacedBy":"167"},{"ruleId":"157","severity":1,"message":"165","line":18,"column":9,"nodeType":"159","messageId":"160","endLine":18,"endColumn":14},{"ruleId":"153","replacedBy":"174"},{"ruleId":"155","replacedBy":"175"},{"ruleId":"157","severity":1,"message":"176","line":15,"column":6,"nodeType":"159","messageId":"160","endLine":15,"endColumn":16},{"ruleId":"157","severity":1,"message":"176","line":15,"column":6,"nodeType":"159","messageId":"160","endLine":15,"endColumn":16},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"@typescript-eslint/no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["179"],"'store' is assigned a value but never used.",["177"],["178"],["177"],["178"],["177"],["178"],"'FormControl' is defined but never used.","'FormLabel' is defined but never used.",["177"],["178"],"'ButtonType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},"Update the dependencies array to be: [dispatch]",{"range":"182","text":"183"},[464,466],"[dispatch]"]